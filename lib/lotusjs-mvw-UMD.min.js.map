{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///lotusjs-mvw-UMD.min.js","webpack:///webpack/bootstrap 72d330190e9313828302?d47f","webpack:///external \"Lavender\"?5437","webpack:///./src/factory/EventDispatcherFactory.ts?862a","webpack:///./src/factory/HttpServiceFactory.ts?1dc6","webpack:///./src/reflection/InjectorDecorator.ts?aec1","webpack:///./src/mediators/AbstractMediator.ts?c8ca","webpack:///external \"Lotus\"?097d","webpack:///./src/context/CommandMap.ts?45e2","webpack:///./src/context/ComponentMap.ts?33bf","webpack:///./src/context/Context.ts?7eb9","webpack:///./src/context/Injector.ts?d857","webpack:///./src/context/MediatorMap.ts?50bc","webpack:///./src/control/command/AbstractCommand.ts?ec08","webpack:///./src/control/events/ActionErrorEvent.ts?941e","webpack:///./src/control/events/ActionSuccessEvent.ts?a0e4","webpack:///./src/control/service/SampleService.ts?6b65","webpack:///./src/utils/TestUtils.ts?c6aa","webpack:///./src/control/command/SampleCommand.ts?d4cf","webpack:///./src/factory/SerializeFactory.ts?ed9b","webpack:///./src/factory/ServiceFactory.ts?2162","webpack:///./src/mediators/ButtonMediator.ts?caee","webpack:///./src/mediators/ListMediator.ts?f914","webpack:///./src/utils/TestContext.ts?98ef","webpack:///./src/index.ts?eac3","webpack:///./~/process/browser.js?82e4","webpack:///./~/reflect-metadata/Reflect.js?ae60","webpack:///(webpack)/buildin/global.js?3698"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Lavender","EventDispatcherFactory","INSTANCE","getInstance","getEventDispatcher","eventDispatcherCode","dispatcher","EventDispatcher","HttpServiceFactory","getHttpService","code","httpService","XhrHttpService","inject","target","key","t","Reflect","getMetadata","constructor","Array","push","type","injectable","f","args","_i","arguments","length","getPrototypeOf","apply","console","log","resolveInjections","forEach","index","instance","context","injector","bind","create","bindable","_val","setter","newVal","set","__extends","extendStatics","setPrototypeOf","__proto__","b","__","Lotus","AbstractMediator","_super","componentInstance","_this","id","UuidUtils","generateUUID","ready","init","addEventListener","ComponentEvent","READY","_id","notify","_componentInstance","_context","addEventListeners","removeEventListeners","canListen","removeEventListener","setUpBindings","removeBindings","binder","unbindAll","toString","destroy","Subject","CommandMap","eventFunctionMap","instanceMap","addCommand","eventType","handler","functionName","useSingleton","undefined","hasCommandMap","eventDispatcher","hasCommand","mapArray","itemIndex","item","removeCommand","shift","pop","head","slice","tail","concat","removeAllCommands","removeAllEventListeners","routeEventToCommand","event","ComponentMap","mapMediators","tagInstance","mediatorMap","tagName","toLowerCase","lotusComponentInstance","CommandMap_1","Injector_1","MediatorMap_1","EventDispatcherFactory_1","ComponentMap_1","Context","config","params","startUp","componentMap","commandMap","Injector","MediatorMap","mapCommands","mapObjects","mapTags","typeMap","objectMap","mapObject","mapIndex","mapSingletonInstance","map","Error","_tagConstructorMap","_mediatorInstanceMap","add","mediatorConstructor","hasMediatorMap","tagConstructorMap","remove","mapId","ActionSuccessEvent_1","ActionErrorEvent_1","AbstractCommand","service","parser","opModel","errorModel","execute","executionError","asyncOperationComplete","asyncOperationCount","executeServiceMethod","parseResponse","result","dispatchSuccess","parsedResult","doneEvent","ActionSuccessEvent","SUCCESS","dispatch","success","e","errorMessage","getErrorMessage","message","stack","errorEvent","ActionErrorEvent","ERROR","error","errors","addItem","appError","fault","getFaultString","status","onProgress","progress","msg","getExecErrorString","payload","clone","AbstractEvent","HttpServiceFactory_1","SampleService","serviceMap","echoJSON","localRequest","getURLWithParams","StringUtil","substitute","getURL","baseUrl","jsonKey","responder","paramObj","format","contentType","cache","url","sendRequest","testRequestUsingIncludedAPI","isPostRequest","JSON","stringify","httpRequestInstance","serviceCode","addResponder","requestType","send","AbstractHttpService","__decorate","decorators","desc","r","getOwnPropertyDescriptor","decorate","__metadata","k","v","metadata","InjectorDecorator_1","InjectorDecorator_2","InjectorDecorator_3","TestUtils","TestObject","AbstractCommand_1","SampleCommand","parse","SerializeFactory","getServiceResultParser","parserCode","getServiceExporter","exporterCode","exporter","SampleService_1","ServiceFactory","getService","AbstractMediator_1","ButtonMediator","onClick","ListMediator","Context_1","TestUtils_1","TestContext","model","__export","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","global","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","delete","size","targetMetadata","Metadata","decorated","descriptor","O","P","Create","_Map","MetadataKey","parent","OrdinaryGetPrototypeOf","ToBoolean","has","MetadataValue","ownKeys","parentKeys","_Set","keys","ownKeys_1","hasKey","_a","parentKeys_1","keysObj","iterator","GetIterator","next","IteratorStep","nextValue","IteratorValue","IteratorClose","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","toPrimitiveSymbol","OrdinaryToPrimitive","toString_1","IsCallable","valueOf","toString_2","argument","ToString","isArray","V","func","obj","method","iteratorSymbol","iterResult","done","proto","functionPrototype","prototypeProto","MakeDictionary","HashMap","hasOwn","supportsSymbol","Symbol","toPrimitive","supportsCreate","supportsProto","downLevel","Function","usePolyfill","Map","entries","getKey","_","getValue","getEntry","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","_find","clear","insert","indexOf","Set","_map","_WeakMap","WeakMap","CreateUniqueKey","CreateUUID","GetOrCreateWeakMapTable","rootKey","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","data","UUID_SIZE","offset","byte","_key","table","__global","self","g","eval","window"],"mappings":"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","file":"lotusjs-mvw-UMD.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LotusMVW\", [\"Lavender\", \"Lotus\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LotusMVW\"] = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse\n\t\troot[\"LotusMVW\"] = factory(root[\"Lavender\"], root[\"Lotus\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LotusMVW\", [\"Lavender\", \"Lotus\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LotusMVW\"] = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse\n\t\troot[\"LotusMVW\"] = factory(root[\"Lavender\"], root[\"Lotus\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 22);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar EventDispatcherFactory = /** @class */ (function () {\r\n    function EventDispatcherFactory() {\r\n        if (EventDispatcherFactory.INSTANCE != null) {\r\n            throw ('EventDispatcherFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    EventDispatcherFactory.getInstance = function () {\r\n        if (EventDispatcherFactory.INSTANCE == null) {\r\n            EventDispatcherFactory.INSTANCE = new EventDispatcherFactory();\r\n        }\r\n        return EventDispatcherFactory.INSTANCE;\r\n    };\r\n    EventDispatcherFactory.prototype.getEventDispatcher = function (eventDispatcherCode) {\r\n        if (eventDispatcherCode === void 0) { eventDispatcherCode = 'Lavender.EventDispatcher'; }\r\n        var dispatcher;\r\n        //config.daoCode defaults to jquery\r\n        switch (eventDispatcherCode) {\r\n            case \"Lavender.EventDispatcher\":\r\n            default:\r\n                dispatcher = new Lavender.EventDispatcher();\r\n        }\r\n        return dispatcher;\r\n    };\r\n    EventDispatcherFactory.INSTANCE = null;\r\n    return EventDispatcherFactory;\r\n}());\r\nexports.EventDispatcherFactory = EventDispatcherFactory;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar HttpServiceFactory = /** @class */ (function () {\r\n    function HttpServiceFactory() {\r\n        if (HttpServiceFactory.INSTANCE != null) {\r\n            throw ('HttpServiceFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    HttpServiceFactory.getInstance = function () {\r\n        if (HttpServiceFactory.INSTANCE == null) {\r\n            HttpServiceFactory.INSTANCE = new HttpServiceFactory();\r\n        }\r\n        return HttpServiceFactory.INSTANCE;\r\n    };\r\n    //override this method to return custon IService implementations\r\n    HttpServiceFactory.prototype.getHttpService = function (code) {\r\n        if (code === void 0) { code = 'Lavender.XhrHttpService'; }\r\n        var httpService;\r\n        switch (code) {\r\n            case \"Lavender.XhrHttpService\":\r\n            default:\r\n                httpService = new Lavender.XhrHttpService();\r\n                break;\r\n        }\r\n        return httpService;\r\n    };\r\n    HttpServiceFactory.INSTANCE = null;\r\n    return HttpServiceFactory;\r\n}());\r\nexports.HttpServiceFactory = HttpServiceFactory;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 8/30/17.\r\n */\r\n__webpack_require__(24);\r\nfunction inject(target, key) {\r\n    //set target[key] equal to a new instance of the mapped constructor of target's type\r\n    var t = Reflect.getMetadata('design:type', target, key);\r\n    if (!t) {\r\n        // Needed to support react native inheritance\r\n        t = Reflect.getMetadata('design:type', target.constructor, key);\r\n    }\r\n    if (!target['resolveInjections']) {\r\n        target['resolveInjections'] = new Array();\r\n    }\r\n    target['resolveInjections'].push({ property: key, type: t });\r\n    //console.log('key: ' + key);\r\n    //console.log('t.name: ' + t.name);\r\n    //console.log('target.constructor.name: ' + target.constructor.name);\r\n    //console.log('target.constructor.prototype: ' + target.constructor.prototype);\r\n}\r\nexports.inject = inject;\r\nfunction injectable(target) {\r\n    // the new constructor behaviour\r\n    var f = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Object.getPrototypeOf(this.constructor.prototype).constructor.apply(this, args);\r\n        console.log(\"injectable constructor called, attempting to resolve injections: \" + this.constructor.prototype);\r\n        if (this.resolveInjections) {\r\n            console.log(\"injections found!!!!: \");\r\n            //TODO: move this method to a decorator that sets up this.resolveInjections as an accessor and adds this functionality to the constructor\r\n            this.resolveInjections.forEach(function (value, index) {\r\n                var instance = this.context.injector.inject(value.type);\r\n                if (instance) {\r\n                    this[value.property] = instance;\r\n                }\r\n            }.bind(this));\r\n        }\r\n        return this;\r\n    };\r\n    f.prototype = Object.create(target.prototype);\r\n    // Remember the constructor property was set wrong, let's fix it\r\n    f.prototype.constructor = f;\r\n    return f;\r\n}\r\nexports.injectable = injectable;\r\nfunction bindable(target, key) {\r\n    console.log('bindable decorator called');\r\n    // property value\r\n    var _val = target[key];\r\n    if (!target['notify']) {\r\n        console.log('notify is undefined. please extend Lavender.Subject.');\r\n        return;\r\n    }\r\n    // property getter\r\n    var getter = function () {\r\n        console.log('Get: ${key} => ${returnValue}');\r\n        return this['_' + key];\r\n    };\r\n    // property setter\r\n    var setter = function (newVal) {\r\n        console.log('Set: ${key} => ${newVal}');\r\n        this['_' + key] = newVal;\r\n        this['notify'](newVal, key);\r\n    };\r\n    // Delete property.\r\n    if (delete target[key]) {\r\n        //define the private property:\r\n        target['_' + key] = _val;\r\n        // Create new property with getter and setter\r\n        Object.defineProperty(target, key, {\r\n            get: getter,\r\n            set: setter,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\nexports.bindable = bindable;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lotus = __webpack_require__(5);\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar AbstractMediator = /** @class */ (function (_super) {\r\n    __extends(AbstractMediator, _super);\r\n    function AbstractMediator(componentInstance, context) {\r\n        var _this = _super.call(this) || this;\r\n        _this.id = Lavender.UuidUtils.generateUUID();\r\n        _this.componentInstance = componentInstance;\r\n        _this.context = context;\r\n        if (!_this.componentInstance.ready) {\r\n            _this.componentInstance.addEventListener(Lotus.ComponentEvent.READY, _this, 'init');\r\n        }\r\n        else {\r\n            _this.init();\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AbstractMediator.prototype, \"id\", {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        set: function (value) {\r\n            this._id = value;\r\n            this.notify(value, 'id');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMediator.prototype, \"componentInstance\", {\r\n        get: function () {\r\n            return this._componentInstance;\r\n        },\r\n        set: function (value) {\r\n            this._componentInstance = value;\r\n            this.notify(value, 'componentInstance');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMediator.prototype, \"context\", {\r\n        get: function () {\r\n            return this._context;\r\n        },\r\n        set: function (value) {\r\n            this._context = value;\r\n            this.notify(value, 'context');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMediator.prototype.addEventListeners = function () {\r\n    };\r\n    AbstractMediator.prototype.removeEventListeners = function () {\r\n        if (this.componentInstance.canListen(Lotus.ComponentEvent.READY, this, 'init')) {\r\n            this.componentInstance.removeEventListener(Lotus.ComponentEvent.READY, this, 'init');\r\n        }\r\n    };\r\n    AbstractMediator.prototype.setUpBindings = function () {\r\n    };\r\n    AbstractMediator.prototype.removeBindings = function () {\r\n        this.binder.unbindAll();\r\n    };\r\n    AbstractMediator.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    AbstractMediator.prototype.init = function () {\r\n        this.addEventListeners();\r\n        this.setUpBindings();\r\n    };\r\n    AbstractMediator.prototype.destroy = function () {\r\n        this.removeEventListeners();\r\n        this.removeBindings();\r\n        this.id = null;\r\n        this.componentInstance = null;\r\n    };\r\n    return AbstractMediator;\r\n}(Lavender.Subject));\r\nexports.AbstractMediator = AbstractMediator;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CommandMap = /** @class */ (function () {\r\n    function CommandMap(context) {\r\n        //Note: this could be improved by creating read only accessor methods for instanceMap and eventFunctionMap\r\n        this.eventFunctionMap = {};\r\n        this.instanceMap = {};\r\n        this.context = context;\r\n    }\r\n    CommandMap.prototype.addCommand = function (eventType, handler, functionName, useSingleton) {\r\n        if (functionName === void 0) { functionName = 'execute'; }\r\n        if (useSingleton === void 0) { useSingleton = false; }\r\n        if (this.eventFunctionMap[eventType] === null || this.eventFunctionMap[eventType] === undefined) {\r\n            this.eventFunctionMap[eventType] = [];\r\n        }\r\n        if (this.hasCommandMap(eventType, handler, functionName)) {\r\n            return; //don't add the handler/function twice\r\n        }\r\n        this.eventFunctionMap[eventType].push({ eventType: eventType, handler: handler, functionName: functionName, useSingleton: useSingleton });\r\n        if (useSingleton) {\r\n            if (this.instanceMap[eventType] === null || this.instanceMap[eventType] === undefined) {\r\n                this.instanceMap[eventType] = {};\r\n            }\r\n            if (this.instanceMap[eventType][handler] === null || this.instanceMap[eventType][handler] === undefined) {\r\n                this.instanceMap[eventType][handler] = new handler(this.context);\r\n            }\r\n        }\r\n        if (!this.context.eventDispatcher.canListen(eventType, this, 'routeEventToCommand')) {\r\n            this.context.eventDispatcher.addEventListener(eventType, this, 'routeEventToCommand');\r\n        }\r\n    };\r\n    CommandMap.prototype.hasCommandMap = function (eventType, handler, functionName) {\r\n        var hasCommand = false;\r\n        if (this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined) {\r\n            var mapArray = this.eventFunctionMap[eventType];\r\n            for (var itemIndex = 0; itemIndex < mapArray.length; itemIndex++) {\r\n                var item = mapArray[itemIndex];\r\n                if (item.handler == handler && item.functionName == functionName) {\r\n                    hasCommand = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return hasCommand;\r\n    };\r\n    CommandMap.prototype.removeCommand = function (eventType, handler) {\r\n        if (this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined) {\r\n            var mapArray = this.eventFunctionMap[eventType];\r\n            for (var itemIndex = mapArray.length - 1; itemIndex >= 0; itemIndex--) {\r\n                var item = mapArray[itemIndex];\r\n                if (item.handler == handler) {\r\n                    //remove the item form the array\r\n                    switch (itemIndex) {\r\n                        case 0:\r\n                            mapArray.shift();\r\n                            break;\r\n                        case mapArray.length - 1:\r\n                            mapArray.pop();\r\n                            break;\r\n                        default:\r\n                            var head = mapArray.slice(0, itemIndex);\r\n                            var tail = mapArray.slice(itemIndex + 1);\r\n                            mapArray = head.concat(tail);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (this.eventFunctionMap[eventType].length <= 0) {\r\n                this.context.eventDispatcher.removeEventListener(eventType, this, 'routeEventToCommand');\r\n                delete this.eventFunctionMap[eventType];\r\n            }\r\n        }\r\n    };\r\n    CommandMap.prototype.removeAllCommands = function () {\r\n        this.eventFunctionMap = {};\r\n        this.instanceMap = {};\r\n        this.context.eventDispatcher.removeAllEventListeners(this);\r\n    };\r\n    CommandMap.prototype.routeEventToCommand = function (event) {\r\n        if (this.eventFunctionMap[event.type] !== null && this.eventFunctionMap[event.type] !== undefined) {\r\n            var mapArray = this.eventFunctionMap[event.type];\r\n            for (var itemIndex = 0; itemIndex < mapArray.length; itemIndex++) {\r\n                var item = mapArray[itemIndex];\r\n                if (item.useSingleton) {\r\n                    this.instanceMap[item.event.type][item.handler][item.functionName]();\r\n                }\r\n                else {\r\n                    var instance = void 0;\r\n                    if (typeof item.handler === 'object') {\r\n                        instance = item.handler;\r\n                    }\r\n                    else {\r\n                        //IMPORTANT: only constructor function will get the context! This is by design as it's assumed preconstructed objects have all required dependencies\r\n                        instance = new item.handler(this.context);\r\n                    }\r\n                    instance[item.functionName](event);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return CommandMap;\r\n}());\r\nexports.CommandMap = CommandMap;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 9/20/17.\r\n */\r\nvar Lotus = __webpack_require__(5);\r\nvar ComponentMap = /** @class */ (function (_super) {\r\n    __extends(ComponentMap, _super);\r\n    function ComponentMap(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    ComponentMap.prototype.mapMediators = function (tagInstance) {\r\n        this.context.mediatorMap.apply(tagInstance.tagName.toLowerCase(), tagInstance.lotusComponentInstance);\r\n    };\r\n    return ComponentMap;\r\n}(Lotus.ComponentMap));\r\nexports.ComponentMap = ComponentMap;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 9/20/17.\r\n */\r\nvar Lotus = __webpack_require__(5);\r\nvar CommandMap_1 = __webpack_require__(6);\r\nvar Injector_1 = __webpack_require__(9);\r\nvar MediatorMap_1 = __webpack_require__(10);\r\nvar EventDispatcherFactory_1 = __webpack_require__(1);\r\nvar ComponentMap_1 = __webpack_require__(7);\r\nvar Context = /** @class */ (function (_super) {\r\n    __extends(Context, _super);\r\n    function Context(config, params) {\r\n        return _super.call(this, config, params) || this;\r\n    }\r\n    Context.prototype.startUp = function () {\r\n        //override the component map instance to use our version\r\n        this.componentMap = new ComponentMap_1.ComponentMap(this);\r\n        _super.prototype.startUp.call(this);\r\n        //IMPORTANT: must occur first so application event bus is configured\r\n        this.eventDispatcher = EventDispatcherFactory_1.EventDispatcherFactory.getInstance().getEventDispatcher();\r\n        this.commandMap = new CommandMap_1.CommandMap(this); //create factory if we require sub classes one day\r\n        this.injector = new Injector_1.Injector(this); //create factory if we require sub classes one day\r\n        this.mediatorMap = new MediatorMap_1.MediatorMap(this);\r\n        this.mapCommands();\r\n        this.mapObjects();\r\n        this.mapMediators();\r\n        this.mapTags();\r\n    };\r\n    Context.prototype.mapTags = function () {\r\n    };\r\n    Context.prototype.mapCommands = function () {\r\n    };\r\n    Context.prototype.mapObjects = function () {\r\n    };\r\n    Context.prototype.mapMediators = function () {\r\n    };\r\n    return Context;\r\n}(Lotus.Context));\r\nexports.Context = Context;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Injector = /** @class */ (function () {\r\n    function Injector(context) {\r\n        this.typeMap = [];\r\n        this.context = context;\r\n        this.objectMap = {};\r\n    }\r\n    Injector.prototype.mapObject = function (key, constructor, useSingleton) {\r\n        if (useSingleton === void 0) { useSingleton = false; }\r\n        if (typeof key == 'function') {\r\n            var mapIndex = -1;\r\n            this.typeMap.forEach(function (value, index) {\r\n                if (value.constructor == constructor) {\r\n                    mapIndex = index;\r\n                    return false;\r\n                }\r\n            });\r\n            //TODO:refactror to overrite index\r\n            if (mapIndex < 0) {\r\n                this.typeMap.push({ constructor: constructor, useSingleton: useSingleton, instance: new constructor(), type: key });\r\n            }\r\n        }\r\n        else {\r\n            //instantiate singleton instance upon request is more efficient\r\n            this.objectMap[key] = { constructor: constructor, useSingleton: useSingleton, instance: null };\r\n        }\r\n    };\r\n    Injector.prototype.mapSingletonInstance = function (key, instance) {\r\n        if (typeof key == 'function') {\r\n            var mapIndex = -1;\r\n            this.typeMap.forEach(function (value, index) {\r\n                if (value.instance == instance) {\r\n                    mapIndex = index;\r\n                    return false;\r\n                }\r\n            });\r\n            //TODO:refactror to overrite index\r\n            if (mapIndex < 0) {\r\n                this.typeMap.push({ constructor: null, useSingleton: true, instance: instance });\r\n            }\r\n        }\r\n        else {\r\n            //map injector as sigleton using the supplied instance\r\n            //this method is very useful for mapping objects that are themselves singletons and may have already been constructed\r\n            //prime example is the model wich generally is constructed before injections are defined\r\n            this.objectMap[key] = { constructor: null, useSingleton: true, instance: instance };\r\n        }\r\n    };\r\n    Injector.prototype.inject = function (key) {\r\n        if (typeof key == 'function') {\r\n            var map;\r\n            this.typeMap.forEach(function (value, index) {\r\n                if (value.type == key || value.instance instanceof key) {\r\n                    map = value;\r\n                    return false;\r\n                }\r\n            });\r\n            if (map) {\r\n                if (map['useSingleton']) {\r\n                    if (map['instance'] === null) {\r\n                        map['instance'] = new map.constructor();\r\n                    }\r\n                    return map['instance'];\r\n                }\r\n                else {\r\n                    return new map.constructor();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.objectMap[key] !== null && this.objectMap[key] !== undefined) {\r\n                if (this.objectMap[key].useSingleton) {\r\n                    if (this.objectMap[key].instance === null) {\r\n                        this.objectMap[key].instance = new this.objectMap[key].constructor();\r\n                    }\r\n                    return this.objectMap[key].instance;\r\n                }\r\n                else {\r\n                    return new this.objectMap[key].constructor();\r\n                }\r\n            }\r\n        }\r\n        throw new Error('Lotus.Injector.prototype.getObject: could not find object for key: ' + key);\r\n    };\r\n    return Injector;\r\n}());\r\nexports.Injector = Injector;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar MediatorMap = /** @class */ (function () {\r\n    function MediatorMap(context) {\r\n        //Note: this could be improved by creating read only accessor methods for tagMap and eventFunctionMap\r\n        this._tagConstructorMap = {};\r\n        this._mediatorInstanceMap = {};\r\n        this.context = context;\r\n    }\r\n    Object.defineProperty(MediatorMap.prototype, \"tagConstructorMap\", {\r\n        get: function () {\r\n            return this._tagConstructorMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MediatorMap.prototype, \"mediatorInstanceMap\", {\r\n        get: function () {\r\n            return this._mediatorInstanceMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MediatorMap.prototype.add = function (tagName, mediatorConstructor, useSingleton) {\r\n        if (useSingleton === void 0) { useSingleton = false; }\r\n        if (this.hasMediatorMap(tagName, mediatorConstructor)) {\r\n            return; //don't add the mediatorConstructor/function twice\r\n        }\r\n        this.tagConstructorMap[tagName] = { useSingleton: useSingleton, constructor: mediatorConstructor, id: Lavender.UuidUtils.generateUUID(), name: mediatorConstructor.toString() };\r\n    };\r\n    MediatorMap.prototype.remove = function (tagName, mediatorConstructor) {\r\n        if (!this.hasMediatorMap(tagName, mediatorConstructor)) {\r\n            return; //don't add the mediatorConstructor/function twice\r\n        }\r\n        var mapId = this.tagConstructorMap[tagName].id;\r\n        this.tagConstructorMap[tagName] = null;\r\n        delete this.tagConstructorMap[tagName];\r\n        if (this._mediatorInstanceMap[mapId] === null || this._mediatorInstanceMap[mapId] === undefined) {\r\n            return; //mo mediators were applied to this mapping\r\n        }\r\n        //iterate in reverse over all instance and destroy\r\n        for (var i = 0; i < this._mediatorInstanceMap[mapId].length; i++) {\r\n            this._mediatorInstanceMap[mapId][i].destroy();\r\n        }\r\n        //make the array eligible for garbage collection\r\n        this._mediatorInstanceMap[mapId] = null;\r\n        delete this._mediatorInstanceMap[mapId];\r\n        return mapId; //return mapId to help enable better tests\r\n    };\r\n    MediatorMap.prototype.apply = function (tagName, componentInstance) {\r\n        var map = this.tagConstructorMap[tagName];\r\n        if (!map) {\r\n            return; //no mediator found for this tag\r\n        }\r\n        if (this._mediatorInstanceMap[map.id] === null || this._mediatorInstanceMap[map.id] === undefined) {\r\n            this._mediatorInstanceMap[map.id] = [];\r\n        }\r\n        if (map.useSingleton) {\r\n            if (this._mediatorInstanceMap[map.id].length == 0) {\r\n                this._mediatorInstanceMap[map.id].push(new map.constructor(componentInstance, this.context));\r\n            }\r\n        }\r\n        else {\r\n            this._mediatorInstanceMap[map.id].push(new map.constructor(componentInstance, this.context));\r\n        }\r\n    };\r\n    MediatorMap.prototype.hasMediatorMap = function (tagName, mediatorConstructor) {\r\n        return (this.tagConstructorMap.hasOwnProperty(tagName) && this.tagConstructorMap[tagName].name == mediatorConstructor.toString());\r\n    };\r\n    return MediatorMap;\r\n}());\r\nexports.MediatorMap = MediatorMap;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\nvar ActionSuccessEvent_1 = __webpack_require__(13);\r\nvar ActionErrorEvent_1 = __webpack_require__(12);\r\n/**\r\n * Created by dsmiley on 7/28/17.\r\n */\r\nvar AbstractCommand = /** @class */ (function (_super) {\r\n    __extends(AbstractCommand, _super);\r\n    function AbstractCommand(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this.context = context;\r\n        _this.service = context.injector.inject('service');\r\n        _this.parser = context.injector.inject('parser');\r\n        _this.opModel = context.injector.inject('opModel');\r\n        _this.errorModel = context.injector.inject('errorModel');\r\n        return _this;\r\n    }\r\n    AbstractCommand.prototype.execute = function (event) {\r\n        if (this.service === null || this.service === undefined || this.opModel === null || this.opModel === undefined || this.parser === null || this.parser === undefined) {\r\n            this.executionError();\r\n        }\r\n        this.opModel.asyncOperationComplete = false;\r\n        this.opModel.asyncOperationCount += 1;\r\n        return this.executeServiceMethod();\r\n    };\r\n    //method must return a requestID\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.executeServiceMethod = function () {\r\n        return null;\r\n    };\r\n    //Override this method in subclasses\r\n    //it should parse the result and return the resulting Object tree\r\n    AbstractCommand.prototype.parseResponse = function (result) {\r\n        return null;\r\n    };\r\n    AbstractCommand.prototype.dispatchSuccess = function (parsedResult) {\r\n        var doneEvent = new ActionSuccessEvent_1.ActionSuccessEvent(ActionSuccessEvent_1.ActionSuccessEvent.SUCCESS, { result: parsedResult });\r\n        this.dispatch(doneEvent);\r\n    };\r\n    AbstractCommand.prototype.success = function (result) {\r\n        try {\r\n            //result is instance of Lavender.HttpSuccess\r\n            var parsedResult = this.parseResponse(result);\r\n            this.dispatchSuccess(parsedResult);\r\n        }\r\n        catch (e) {\r\n            var errorMessage = this.getErrorMessage() + \"\\n\" + e.message + \"\\n\" + e.stack;\r\n            var errorEvent = new ActionErrorEvent_1.ActionErrorEvent(ActionErrorEvent_1.ActionErrorEvent.ERROR, { message: errorMessage });\r\n            this.dispatch(errorEvent);\r\n            var error = { name: 'error', message: errorMessage };\r\n            this.errorModel.errors.addItem(error);\r\n            this.errorModel.appError = true;\r\n        }\r\n        finally {\r\n            this.opModel.asyncOperationCount -= 1;\r\n            if (this.opModel.asyncOperationCount == 0) {\r\n                this.opModel.asyncOperationComplete = true;\r\n            }\r\n            this.destroy();\r\n        }\r\n    };\r\n    AbstractCommand.prototype.fault = function (fault) {\r\n        //fault is an instance of Lavender.HttpFault\r\n        this.opModel.asyncOperationCount -= 1;\r\n        if (this.opModel.asyncOperationCount == 0) {\r\n            this.opModel.asyncOperationComplete = true;\r\n        }\r\n        var errorMessage = this.getFaultString() + fault.message;\r\n        var errorEvent = new ActionErrorEvent_1.ActionErrorEvent(ActionErrorEvent_1.ActionErrorEvent.ERROR, { message: errorMessage });\r\n        this.dispatch(errorEvent);\r\n        var error = { name: fault.status, message: errorMessage };\r\n        this.errorModel.errors.addItem(error);\r\n        this.errorModel.appError = true;\r\n        this.destroy();\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.onProgress = function (progress) {\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.getFaultString = function () {\r\n        return null;\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.getErrorMessage = function () {\r\n        return null;\r\n    };\r\n    AbstractCommand.prototype.executionError = function () {\r\n        // These properties weren't injected or supplied in the constructor or manually.\r\n        // They are needed so we throw an error.\r\n        var msg = this.getExecErrorString();\r\n        if (this.service === null || this.service === undefined) {\r\n            msg += \" service\";\r\n        }\r\n        if (this.opModel === null || this.opModel) {\r\n            msg += \", opModel\";\r\n        }\r\n        if (this.parser === null || this.parser === undefined) {\r\n            msg += \", parser\";\r\n        }\r\n        msg += \".\";\r\n        throw new Error(msg);\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.getExecErrorString = function () {\r\n        return 'Lavender.AbstractServiceAction.prototype.executionError: the following are required: ';\r\n    };\r\n    AbstractCommand.prototype.destroy = function () {\r\n        if (this.canListen(ActionErrorEvent_1.ActionErrorEvent.ERROR, this, 'onError')) {\r\n            this.removeEventListener(ActionErrorEvent_1.ActionErrorEvent.ERROR, this, 'onError');\r\n        }\r\n        if (this.canListen(ActionSuccessEvent_1.ActionSuccessEvent.SUCCESS, this, 'onSuccess')) {\r\n            this.removeEventListener(ActionSuccessEvent_1.ActionSuccessEvent.SUCCESS, this, 'onSuccess');\r\n        }\r\n        this.context = null;\r\n        this.opModel = null;\r\n        this.service = null;\r\n        this.parser = null;\r\n        this.errorModel = null;\r\n    };\r\n    return AbstractCommand;\r\n}(Lavender.EventDispatcher));\r\nexports.AbstractCommand = AbstractCommand;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 5/18/17.\r\n */\r\nvar Lavender = __webpack_require__(0);\r\nvar ActionErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ActionErrorEvent, _super);\r\n    function ActionErrorEvent(type, payload) {\r\n        var _this = _super.call(this, type, payload) || this;\r\n        if (!payload || payload.message === null || payload.message === undefined) {\r\n            throw new Error('Lavender.ActionErrorEvent: payload.message is required');\r\n        }\r\n        return _this;\r\n    }\r\n    ActionErrorEvent.prototype.clone = function (type, payload) {\r\n        return new ActionErrorEvent(this.type, this.payload);\r\n    };\r\n    ActionErrorEvent.ERROR = 'actionError';\r\n    return ActionErrorEvent;\r\n}(Lavender.AbstractEvent));\r\nexports.ActionErrorEvent = ActionErrorEvent;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 5/18/17.\r\n */\r\nvar Lavender = __webpack_require__(0);\r\nvar ActionSuccessEvent = /** @class */ (function (_super) {\r\n    __extends(ActionSuccessEvent, _super);\r\n    function ActionSuccessEvent(type, payload) {\r\n        var _this = _super.call(this, type, payload) || this;\r\n        if (payload === null || payload === undefined) {\r\n            throw new Error('Lavender.ActionSuccessEvent: payload is required');\r\n        }\r\n        return _this;\r\n    }\r\n    ActionSuccessEvent.prototype.clone = function (type, payload) {\r\n        return new ActionSuccessEvent(this.type, this.payload);\r\n    };\r\n    ActionSuccessEvent.SUCCESS = 'actionSuccess';\r\n    return ActionSuccessEvent;\r\n}(Lavender.AbstractEvent));\r\nexports.ActionSuccessEvent = ActionSuccessEvent;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\nvar HttpServiceFactory_1 = __webpack_require__(2);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n * This is a sample asynchronous action used in unit tests. It can be used as a template though for all asynch actions\r\n */\r\nvar SampleService = /** @class */ (function (_super) {\r\n    __extends(SampleService, _super);\r\n    function SampleService(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.config = config;\r\n        _this.serviceMap = (config.hasOwnProperty('serviceMap')) ? config['serviceMap'] :\r\n            {\r\n                'echoJSON': ':3000/echoJSON/key/{0}',\r\n                'localRequest': ':3000/printondemand/1234/photos/{0}'\r\n            };\r\n        return _this;\r\n    }\r\n    SampleService.prototype.getURLWithParams = function (key, args) {\r\n        return (args !== null && args !== undefined) ? Lavender.StringUtil.substitute(this.getURL(key), args) : this.getURL(key);\r\n    };\r\n    SampleService.prototype.getURL = function (key) {\r\n        return this.config.baseUrl + this.serviceMap[key];\r\n    };\r\n    SampleService.prototype.echoJSON = function (jsonKey, key, responder, paramObj, format, contentType, cache) {\r\n        if (paramObj === void 0) { paramObj = {}; }\r\n        if (format === void 0) { format = 'json'; }\r\n        if (contentType === void 0) { contentType = 'application/json'; }\r\n        if (cache === void 0) { cache = false; }\r\n        //this is a sample service method to be used as an example only. You service methods will be dependent on your service API and model objects\r\n        //note the use of the key param. This is a very importnat feature and I highly recommend that whatever service you created implements a similar method\r\n        //don't hard code or otherwise tightly couple the URL creation inside this method. The use of a builder pattern ensures the end point can be changed based on environment\r\n        var url = this.getURLWithParams(key, [jsonKey]);\r\n        return this.sendRequest(true, responder, url, paramObj, format, contentType, cache);\r\n    };\r\n    SampleService.prototype.testRequestUsingIncludedAPI = function (key, responder, format, contentType, cache) {\r\n        if (format === void 0) { format = 'json'; }\r\n        if (contentType === void 0) { contentType = 'application/json'; }\r\n        if (cache === void 0) { cache = false; }\r\n        var url = this.getURLWithParams(key, ['54232fc2-7345-4921-8079']); //hard coded args\r\n        return this.sendRequest(false, responder, url, null, format, contentType, cache);\r\n    };\r\n    SampleService.prototype.sendRequest = function (isPostRequest, responder, url, paramObj, format, contentType, cache) {\r\n        if (paramObj === void 0) { paramObj = {}; }\r\n        if (format === void 0) { format = 'json'; }\r\n        if (contentType === void 0) { contentType = 'application/json'; }\r\n        if (cache === void 0) { cache = false; }\r\n        var params = JSON.stringify(paramObj);\r\n        if (cache === null || cache === undefined) {\r\n            cache = false;\r\n        }\r\n        var httpRequestInstance = HttpServiceFactory_1.HttpServiceFactory.getInstance().getHttpService(this.config.serviceCode);\r\n        httpRequestInstance.addResponder(responder);\r\n        var requestType = (isPostRequest) ? 'POST' : 'GET';\r\n        return httpRequestInstance.send(requestType, url, params, contentType, format, cache);\r\n    };\r\n    return SampleService;\r\n}(Lavender.AbstractHttpService));\r\nexports.SampleService = SampleService;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 10/25/17.\r\n */\r\nvar InjectorDecorator_1 = __webpack_require__(3);\r\nvar InjectorDecorator_2 = __webpack_require__(3);\r\nvar InjectorDecorator_3 = __webpack_require__(3);\r\nvar EventDispatcherFactory_1 = __webpack_require__(1);\r\nvar HttpServiceFactory_1 = __webpack_require__(2);\r\nvar Lavender = __webpack_require__(0);\r\n/*\r\n* This class is used for testing purposes only. It is not included in distributions\r\n* */\r\nvar TestUtils = /** @class */ (function (_super) {\r\n    __extends(TestUtils, _super);\r\n    function TestUtils(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    __decorate([\r\n        InjectorDecorator_1.inject,\r\n        __metadata(\"design:type\", EventDispatcherFactory_1.EventDispatcherFactory)\r\n    ], TestUtils.prototype, \"eventDispatcherFactory\", void 0);\r\n    __decorate([\r\n        InjectorDecorator_1.inject,\r\n        __metadata(\"design:type\", HttpServiceFactory_1.HttpServiceFactory)\r\n    ], TestUtils.prototype, \"httpFactory\", void 0);\r\n    __decorate([\r\n        InjectorDecorator_1.inject,\r\n        __metadata(\"design:type\", TestObject)\r\n    ], TestUtils.prototype, \"testObject\", void 0);\r\n    __decorate([\r\n        InjectorDecorator_3.bindable,\r\n        __metadata(\"design:type\", Object)\r\n    ], TestUtils.prototype, \"bindingTest\", void 0);\r\n    TestUtils = __decorate([\r\n        InjectorDecorator_2.injectable,\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], TestUtils);\r\n    return TestUtils;\r\n}(Lavender.Subject));\r\nexports.TestUtils = TestUtils;\r\nvar TestObject = /** @class */ (function (_super) {\r\n    __extends(TestObject, _super);\r\n    function TestObject() {\r\n        var _this = _super.call(this) || this;\r\n        _this.id = Lavender.UuidUtils.generateUUID();\r\n        return _this;\r\n    }\r\n    return TestObject;\r\n}(Lavender.Subject));\r\nexports.TestObject = TestObject;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractCommand_1 = __webpack_require__(11);\r\n/**\r\n * Created by dsmiley on 7/28/17.\r\n */\r\nvar SampleCommand = /** @class */ (function (_super) {\r\n    __extends(SampleCommand, _super);\r\n    function SampleCommand(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    SampleCommand.prototype.executeServiceMethod = function () {\r\n        //since services will always be injected by the IOC container always user the interface type\r\n        return this.service.testRequestUsingIncludedAPI('localRequest', this);\r\n    };\r\n    SampleCommand.prototype.parseResponse = function (result) {\r\n        //since serilization objects will always be injected by the IOC container always user the interface type\r\n        return this.parser.parse(result); //use this.parser.parse to deserialize results. You'll of course need to implement the parser, our tests just use a generic function that returns the result\r\n        //most commands would also receive a model injection and the command would update it here\r\n    };\r\n    SampleCommand.prototype.getFaultString = function () {\r\n        return 'Lotus.SampleCommand a service request error occured';\r\n    };\r\n    SampleCommand.prototype.getErrorMessage = function () {\r\n        return 'Lotus.SampleCommand an execution error occured ';\r\n    };\r\n    SampleCommand.prototype.getExecErrorString = function () {\r\n        return 'Lotus.SampleCommand the following are required: ';\r\n    };\r\n    return SampleCommand;\r\n}(AbstractCommand_1.AbstractCommand));\r\nexports.SampleCommand = SampleCommand;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar SerializeFactory = /** @class */ (function () {\r\n    function SerializeFactory() {\r\n        if (SerializeFactory.INSTANCE != null) {\r\n            throw ('SerializeFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    SerializeFactory.getInstance = function () {\r\n        if (SerializeFactory.INSTANCE == null) {\r\n            SerializeFactory.INSTANCE = new SerializeFactory();\r\n        }\r\n        return SerializeFactory.INSTANCE;\r\n    };\r\n    /*\r\n     * Stub for override, this method is just an example of how this factory can be used\r\n     * */\r\n    SerializeFactory.prototype.getServiceResultParser = function (parserCode) {\r\n        var parser;\r\n        switch (parserCode) {\r\n            case 'local':\r\n            case 'remote':\r\n            default:\r\n                parser = {};\r\n                break;\r\n        }\r\n        return parser;\r\n    };\r\n    /*\r\n     * Stub for override, this method is just an example of how this factory can be used\r\n     * */\r\n    SerializeFactory.prototype.getServiceExporter = function (exporterCode) {\r\n        var exporter;\r\n        //we resuse parserCode which should really probably be called serializationCode\r\n        switch (exporterCode) {\r\n            case 'local':\r\n            case 'remote':\r\n            default:\r\n                exporter = {};\r\n                break;\r\n        }\r\n        return exporter;\r\n    };\r\n    SerializeFactory.INSTANCE = null;\r\n    return SerializeFactory;\r\n}());\r\nexports.SerializeFactory = SerializeFactory;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SampleService_1 = __webpack_require__(14);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar ServiceFactory = /** @class */ (function () {\r\n    function ServiceFactory() {\r\n        if (ServiceFactory.INSTANCE != null) {\r\n            throw ('ServiceFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    ServiceFactory.getInstance = function () {\r\n        if (ServiceFactory.INSTANCE == null) {\r\n            ServiceFactory.INSTANCE = new ServiceFactory();\r\n        }\r\n        return ServiceFactory.INSTANCE;\r\n    };\r\n    ServiceFactory.prototype.getService = function (config) {\r\n        var service;\r\n        switch (config.serviceCode) {\r\n            default:\r\n                service = new SampleService_1.SampleService(config);\r\n        }\r\n        return service;\r\n    };\r\n    ServiceFactory.INSTANCE = null;\r\n    return ServiceFactory;\r\n}());\r\nexports.ServiceFactory = ServiceFactory;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractMediator_1 = __webpack_require__(4);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar ButtonMediator = /** @class */ (function (_super) {\r\n    __extends(ButtonMediator, _super);\r\n    function ButtonMediator(componentInstance, context) {\r\n        var _this = this;\r\n        console.log('ButtonMediator constructor called');\r\n        _this = _super.call(this, componentInstance, context) || this;\r\n        return _this;\r\n    }\r\n    ButtonMediator.prototype.onClick = function (event) {\r\n        console.log('Im the button mediator, I can handle the component click and dispatch an application event.');\r\n    };\r\n    ButtonMediator.prototype.addEventListeners = function () {\r\n        _super.prototype.addEventListeners.call(this);\r\n        this.componentInstance.addEventListener('click', this, 'onClick');\r\n    };\r\n    ButtonMediator.prototype.removeEventListeners = function () {\r\n        _super.prototype.removeEventListeners.call(this);\r\n        this.componentInstance.removeEventListener('click', this, 'onClick');\r\n    };\r\n    ButtonMediator.prototype.toString = function () {\r\n        return 'Lotus.ButtonMediator';\r\n    };\r\n    return ButtonMediator;\r\n}(AbstractMediator_1.AbstractMediator));\r\nexports.ButtonMediator = ButtonMediator;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractMediator_1 = __webpack_require__(4);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar ListMediator = /** @class */ (function (_super) {\r\n    __extends(ListMediator, _super);\r\n    function ListMediator(componentInstance, context) {\r\n        return _super.call(this, componentInstance, context) || this;\r\n    }\r\n    ListMediator.prototype.toString = function () {\r\n        return 'Lotus.ListMediator';\r\n    };\r\n    return ListMediator;\r\n}(AbstractMediator_1.AbstractMediator));\r\nexports.ListMediator = ListMediator;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Context_1 = __webpack_require__(8);\r\nvar EventDispatcherFactory_1 = __webpack_require__(1);\r\nvar HttpServiceFactory_1 = __webpack_require__(2);\r\nvar TestUtils_1 = __webpack_require__(15);\r\n/**\r\n * This class is used for testing purposes only. It is not included in distributions\r\n */\r\nvar TestContext = /** @class */ (function (_super) {\r\n    __extends(TestContext, _super);\r\n    function TestContext(model, params) {\r\n        return _super.call(this, model, params) || this;\r\n    }\r\n    TestContext.prototype.toString = function () {\r\n        return 'TestContext';\r\n    };\r\n    TestContext.prototype.mapObjects = function () {\r\n        this.injector.mapObject(TestUtils_1.TestObject, TestUtils_1.TestObject, false);\r\n        this.injector.mapSingletonInstance(EventDispatcherFactory_1.EventDispatcherFactory, EventDispatcherFactory_1.EventDispatcherFactory.getInstance());\r\n        this.injector.mapSingletonInstance(HttpServiceFactory_1.HttpServiceFactory, HttpServiceFactory_1.HttpServiceFactory.getInstance());\r\n    };\r\n    return TestContext;\r\n}(Context_1.Context));\r\nexports.TestContext = TestContext;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 7/24/17.\r\n */\r\n//IMPORTANT: comment these out after testing so they are not included in the release!!!\r\n//they will add code bloat and are only used to test decorator functions\r\n__export(__webpack_require__(15));\r\n__export(__webpack_require__(21));\r\n__export(__webpack_require__(9));\r\n__export(__webpack_require__(6));\r\n__export(__webpack_require__(10));\r\n__export(__webpack_require__(7));\r\n__export(__webpack_require__(8));\r\n__export(__webpack_require__(3));\r\n__export(__webpack_require__(1));\r\n__export(__webpack_require__(17));\r\n__export(__webpack_require__(2));\r\n__export(__webpack_require__(18));\r\n__export(__webpack_require__(14));\r\n__export(__webpack_require__(13));\r\n__export(__webpack_require__(12));\r\n__export(__webpack_require__(11));\r\n__export(__webpack_require__(16));\r\n__export(__webpack_require__(4));\r\n__export(__webpack_require__(19));\r\n__export(__webpack_require__(20));\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        HashMap.create = supportsCreate\r\n            ? function () { return MakeDictionary(Object.create(null)); }\r\n            : supportsProto\r\n                ? function () { return MakeDictionary({ __proto__: null }); }\r\n                : function () { return MakeDictionary({}); };\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, propertyKey, attributes) {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                throw new TypeError();\r\n            if (IsNull(attributes))\r\n                attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var keys = [];\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        var k = 0;\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            var nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument) {\r\n        switch (Type(argument)) {\r\n            case 3 /* String */: return true;\r\n            case 4 /* Symbol */: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = HashMap.create();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23), __webpack_require__(25)))\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lotusjs-mvw-UMD.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 72d330190e9313828302","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Lavender\"\n// module id = 0\n// module chunks = 0 1","import {IEventDispatcherFactory} from \"./IEventDispatcherFactory\";\nimport * as Lavender from 'lavenderjs/lib';\n\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class EventDispatcherFactory implements IEventDispatcherFactory{\n    private static INSTANCE:IEventDispatcherFactory = null;\n\n    constructor(){\n        if (EventDispatcherFactory.INSTANCE != null ) {\n            throw( 'EventDispatcherFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IEventDispatcherFactory{\n        if (EventDispatcherFactory.INSTANCE == null) {\n            EventDispatcherFactory.INSTANCE = new EventDispatcherFactory();\n        }\n        return EventDispatcherFactory.INSTANCE;\n    }\n\n    public getEventDispatcher(eventDispatcherCode:string='Lavender.EventDispatcher'):Lavender.IEventDispatcher{\n        let dispatcher;\n        //config.daoCode defaults to jquery\n        switch( eventDispatcherCode ){\n            case \"Lavender.EventDispatcher\":\n            default:\n                dispatcher = new Lavender.EventDispatcher();\n        }\n        return dispatcher;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/EventDispatcherFactory.ts","import {IHttpServiceFactory} from \"./IHttpServiceFactory\";\nimport * as Lavender from 'lavenderjs/lib';\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class HttpServiceFactory implements IHttpServiceFactory{\n    private static INSTANCE:IHttpServiceFactory = null;\n\n    constructor(){\n        if (HttpServiceFactory.INSTANCE != null ) {\n            throw( 'HttpServiceFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IHttpServiceFactory{\n        if (HttpServiceFactory.INSTANCE == null) {\n            HttpServiceFactory.INSTANCE = new HttpServiceFactory();\n        }\n        return HttpServiceFactory.INSTANCE;\n    }\n\n    //override this method to return custon IService implementations\n    public getHttpService(code:string='Lavender.XhrHttpService'):Lavender.IHttpService{\n        let httpService;\n        switch(code){\n            case \"Lavender.XhrHttpService\":\n            default:\n                httpService = new Lavender.XhrHttpService();\n                break;\n        }\n        return httpService;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/HttpServiceFactory.ts","/**\n * Created by dsmiley on 8/30/17.\n */\nimport 'reflect-metadata';\nimport * as Lavender from 'lavenderjs/lib';\n\nexport type injectionResolver = {property:string, type:Function};\n\nexport function inject(target:any, key:string){\n    //set target[key] equal to a new instance of the mapped constructor of target's type\n    let t = Reflect.getMetadata('design:type', target, key);\n    if (!t) {\n        // Needed to support react native inheritance\n        t = Reflect.getMetadata('design:type', target.constructor, key);\n    }\n    if(!target['resolveInjections']){\n        target['resolveInjections'] = new Array<injectionResolver>();\n    }\n    (target['resolveInjections'] as Array<injectionResolver>).push({property:key, type:t});\n    //console.log('key: ' + key);\n    //console.log('t.name: ' + t.name);\n    //console.log('target.constructor.name: ' + target.constructor.name);\n    //console.log('target.constructor.prototype: ' + target.constructor.prototype);\n}\n\nexport function injectable(target:any){\n    // the new constructor behaviour\n    var f : any = function (...args) {\n        Object.getPrototypeOf(this.constructor.prototype).constructor.apply(this, args);\n        console.log(\"injectable constructor called, attempting to resolve injections: \" + this.constructor.prototype);\n        if(this.resolveInjections){\n            console.log(\"injections found!!!!: \");\n            //TODO: move this method to a decorator that sets up this.resolveInjections as an accessor and adds this functionality to the constructor\n            this.resolveInjections.forEach(function(value:injectionResolver, index:number){\n                var instance:any = this.context.injector.inject(value.type);\n                if(instance){\n                    this[value.property] = instance;\n                }\n            }.bind(this));\n        }\n        return this;\n    }\n    f.prototype = Object.create(target.prototype);\n    // Remember the constructor property was set wrong, let's fix it\n    f.prototype.constructor = f;\n\n    return f;\n}\n\nexport function bindable(target: any, key: string){\n    console.log('bindable decorator called');\n    // property value\n    var _val = target[key];\n\n    if(!target['notify']){\n        console.log('notify is undefined. please extend Lavender.Subject.');\n        return;\n    }\n\n    // property getter\n    var getter = function () {\n        console.log('Get: ${key} => ${returnValue}');\n        return this['_'+key];\n    };\n\n    // property setter\n    var setter = function (newVal) {\n        console.log('Set: ${key} => ${newVal}');\n        this['_'+key] = newVal;\n        this['notify']( newVal, key );\n    };\n\n    // Delete property.\n    if (delete target[key]) {\n        //define the private property:\n        target['_'+key] = _val;\n        // Create new property with getter and setter\n        Object.defineProperty(target, key, {\n            get: getter,\n            set: setter,\n            enumerable: true,\n            configurable: true\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/reflection/InjectorDecorator.ts","import {IMediator} from \"./IMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {injectable} from \"../reflection/InjectorDecorator\";\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport abstract class AbstractMediator extends Lavender.Subject implements IMediator{\n    private _id:string;\n    private _componentInstance:Lotus.IComponent;\n    private _context:Lotus.IContext;\n\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        super();\n        this.id = Lavender.UuidUtils.generateUUID();\n        this.componentInstance = componentInstance;\n        this.context = context;\n        if(!this.componentInstance.ready){\n            this.componentInstance.addEventListener(Lotus.ComponentEvent.READY, this, 'init');\n        }else{\n            this.init();\n        }\n    }\n\n\n    get id():string {\n        return this._id;\n    }\n\n    set id(value:string) {\n        this._id = value;\n        this.notify(value, 'id');\n    }\n\n    get componentInstance():Lotus.IComponent {\n        return this._componentInstance;\n    }\n\n    set componentInstance(value:Lotus.IComponent) {\n        this._componentInstance = value;\n        this.notify(value, 'componentInstance');\n    }\n\n    get context():Lotus.IContext {\n        return this._context;\n    }\n\n    set context(value:Lotus.IContext) {\n        this._context = value;\n        this.notify(value, 'context');\n    }\n\n    protected addEventListeners():void{\n\n    }\n\n    protected removeEventListeners():void{\n        if(this.componentInstance.canListen(Lotus.ComponentEvent.READY, this, 'init')){\n            this.componentInstance.removeEventListener(Lotus.ComponentEvent.READY, this, 'init');\n        }\n    }\n\n    protected setUpBindings():void{\n\n    }\n\n    protected removeBindings():void{\n        this.binder.unbindAll();\n    }\n\n    public toString():string{\n        return this.id;\n    }\n\n    public init():void{\n        this.addEventListeners();\n        this.setUpBindings();\n    }\n\n    public destroy():void{\n        this.removeEventListeners();\n        this.removeBindings();\n        this.id = null;\n        this.componentInstance = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/AbstractMediator.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Lotus\"\n// module id = 5\n// module chunks = 0 1","/**\n * Created by dsmiley on 7/24/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {ICommandMap} from \"./ICommandMap\";\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class CommandMap implements ICommandMap{\n    public eventFunctionMap:Object;\n    public instanceMap:Object;\n    public context:Lotus.IContext;\n\n    constructor(context:Lotus.IContext){\n        //Note: this could be improved by creating read only accessor methods for instanceMap and eventFunctionMap\n        this.eventFunctionMap = {};\n        this.instanceMap = {};\n        this.context = context;\n    }\n\n    public addCommand(eventType:string, handler:any, functionName:string='execute', useSingleton:boolean=false):void{\n        if( this.eventFunctionMap[eventType] === null || this.eventFunctionMap[eventType] === undefined ){\n            this.eventFunctionMap[eventType] = [];\n        }\n\n        if( this.hasCommandMap( eventType, handler, functionName ) ){\n            return;//don't add the handler/function twice\n        }\n\n        this.eventFunctionMap[eventType].push({eventType:eventType, handler:handler, functionName:functionName, useSingleton:useSingleton});\n\n        if( useSingleton ){\n            if( this.instanceMap[eventType] === null ||  this.instanceMap[eventType] === undefined ){\n                this.instanceMap[eventType] = {};\n            }\n            if( this.instanceMap[eventType][handler] === null ||  this.instanceMap[eventType][handler] === undefined ){\n                this.instanceMap[eventType][handler] = new handler(this.context);\n            }\n        }\n        if( !this.context.eventDispatcher.canListen(eventType, this, 'routeEventToCommand') ){\n            this.context.eventDispatcher.addEventListener(eventType, this, 'routeEventToCommand');\n        }\n    }\n\n    public hasCommandMap(eventType:string, handler:Object, functionName:string):boolean{\n        let hasCommand = false;\n        if( this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined ){\n            let mapArray = this.eventFunctionMap[eventType];\n            for( let itemIndex = 0; itemIndex < mapArray.length; itemIndex++){\n                let item = mapArray[ itemIndex ];\n                if( item.handler == handler && item.functionName == functionName ){\n                    hasCommand = true;\n                    break;\n                }\n            }\n        }\n        return hasCommand;\n    }\n\n    public removeCommand(eventType:string, handler:Object):void{\n        if( this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined ){\n            let mapArray = this.eventFunctionMap[eventType];\n            for( let itemIndex = mapArray.length - 1; itemIndex >= 0; itemIndex--){\n                let item = mapArray[ itemIndex ];\n                if( item.handler == handler ){\n                    //remove the item form the array\n                    switch (itemIndex) {\n                        case 0:\n                            mapArray.shift();\n                            break;\n                        case mapArray.length - 1:\n                            mapArray.pop();\n                            break;\n                        default:\n                            let head = mapArray.slice(0, itemIndex);\n                            let tail = mapArray.slice(itemIndex + 1);\n                            mapArray = head.concat(tail);\n                            break;\n                    }\n                }\n            }\n            if( this.eventFunctionMap[eventType].length <= 0 ){\n                this.context.eventDispatcher.removeEventListener(eventType, this, 'routeEventToCommand');\n                delete this.eventFunctionMap[eventType];\n            }\n        }\n    }\n\n    public removeAllCommands():void{\n        this.eventFunctionMap = {};\n        this.instanceMap = {};\n        this.context.eventDispatcher.removeAllEventListeners(this);\n    }\n\n    public routeEventToCommand(event:Lavender.IEvent):void{\n        if( this.eventFunctionMap[event.type] !== null && this.eventFunctionMap[event.type] !== undefined ){\n            let mapArray = this.eventFunctionMap[event.type];\n            for( let itemIndex = 0; itemIndex < mapArray.length; itemIndex++){\n                let item = mapArray[ itemIndex ];\n                if( item.useSingleton ){\n                    this.instanceMap[item.event.type][item.handler][item.functionName]();\n                }else{\n                    let instance;\n                    if( typeof item.handler === 'object' ){\n                        instance = item.handler;\n                    }else{\n                        //IMPORTANT: only constructor function will get the context! This is by design as it's assumed preconstructed objects have all required dependencies\n                        instance = new item.handler(this.context);\n                    }\n                    instance[item.functionName](event);\n                }\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/CommandMap.ts","/**\n * Created by dsmiley on 9/20/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IContext} from \"./IContext\";\n\nexport class ComponentMap extends Lotus.ComponentMap{\n    constructor(context:IContext){\n        super(context);\n    }\n\n    protected mapMediators(tagInstance:Lotus.LotusHTMLElement):void{\n        (this.context as IContext).mediatorMap.apply(tagInstance.tagName.toLowerCase(), tagInstance.lotusComponentInstance);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/ComponentMap.ts","/**\n * Created by dsmiley on 9/20/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IMediatorMap} from \"./IMediatorMap\";\nimport {IInjector} from \"./IInjector\";\nimport {ICommandMap} from \"./ICommandMap\";\nimport {CommandMap} from \"./CommandMap\";\nimport {Injector} from \"./Injector\";\nimport {MediatorMap} from \"./MediatorMap\";\nimport {EventDispatcherFactory} from \"../factory/EventDispatcherFactory\";\nimport {ComponentMap} from \"./ComponentMap\";\n\nexport class Context extends Lotus.Context{\n    public commandMap:ICommandMap;\n    public injector:IInjector\n    public mediatorMap:IMediatorMap;\n\n    constructor(config:Object, params:Object){\n        super(config, params);\n    }\n\n    public startUp(){\n        //override the component map instance to use our version\n        this.componentMap = new ComponentMap(this);\n        super.startUp();\n        //IMPORTANT: must occur first so application event bus is configured\n        this.eventDispatcher = EventDispatcherFactory.getInstance().getEventDispatcher();\n        this.commandMap = new CommandMap(this);//create factory if we require sub classes one day\n        this.injector = new Injector(this);//create factory if we require sub classes one day\n        this.mediatorMap = new MediatorMap(this);\n        this.mapCommands();\n        this.mapObjects();\n        this.mapMediators();\n        this.mapTags();\n    }\n\n    public mapTags(){\n\n    }\n\n    public mapCommands(){\n\n    }\n\n    public mapObjects(){\n\n    }\n\n    public mapMediators(){\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/Context.ts","/**\n * Created by dsmiley on 7/24/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IInjector} from './IInjector';\n\nexport class Injector implements IInjector{\n    public context:Lotus.IContext;\n    public objectMap:Object;\n    public typeMap:Array<Object> = [];\n\n    constructor(context:Lotus.IContext){\n        this.context = context;\n        this.objectMap = {};\n    }\n\n    public mapObject(key:any, constructor:FunctionConstructor, useSingleton:boolean=false):void{\n        if(typeof key == 'function'){\n            var mapIndex = -1;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.constructor == constructor){\n                    mapIndex = index;\n                    return false;\n                }\n            });\n            //TODO:refactror to overrite index\n            if(mapIndex < 0){\n                this.typeMap.push({constructor:constructor, useSingleton:useSingleton, instance:new constructor(), type:key});\n            }\n        }else{\n            //instantiate singleton instance upon request is more efficient\n            this.objectMap[key] = {constructor:constructor, useSingleton:useSingleton, instance:null};\n        }\n    }\n\n    public mapSingletonInstance(key:any, instance:any):void{\n        if(typeof key == 'function'){\n            var mapIndex = -1;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.instance == instance){\n                    mapIndex = index;\n                    return false;\n                }\n            });\n            //TODO:refactror to overrite index\n            if(mapIndex < 0){\n                this.typeMap.push({constructor: null, useSingleton: true, instance: instance});\n            }\n        }else {\n            //map injector as sigleton using the supplied instance\n            //this method is very useful for mapping objects that are themselves singletons and may have already been constructed\n            //prime example is the model wich generally is constructed before injections are defined\n            this.objectMap[key] = {constructor: null, useSingleton: true, instance: instance};\n        }\n    }\n\n    public inject(key:any):Object{\n        if(typeof key == 'function'){\n            var map:Object;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.type == key || value.instance instanceof key){\n                    map = value;\n                    return false;\n                }\n            });\n            if(map){\n                if( map['useSingleton'] ){\n                    if( map['instance'] === null ){\n                        map['instance'] = new (map.constructor as FunctionConstructor)();\n                    }\n                    return map['instance'];\n                }else{\n                    return new (map.constructor as FunctionConstructor)();\n                }\n            }\n        }else{\n            if( this.objectMap[key] !== null && this.objectMap[key] !== undefined ){\n                if( this.objectMap[key].useSingleton ){\n                    if( this.objectMap[key].instance === null ){\n                        this.objectMap[key].instance = new this.objectMap[key].constructor();\n                    }\n                    return this.objectMap[key].instance;\n                }else{\n                    return new this.objectMap[key].constructor();\n                }\n            }\n        }\n        throw new Error('Lotus.Injector.prototype.getObject: could not find object for key: ' + key);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/Injector.ts","import {IMediatorMap} from \"./IMediatorMap\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {IMediator} from \"../mediators/IMediator\";\n\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport class MediatorMap implements IMediatorMap{\n    protected _tagConstructorMap:Object;\n    protected _mediatorInstanceMap:Object;\n    public context:Lotus.IContext;\n\n    constructor(context:Lotus.IContext){\n        //Note: this could be improved by creating read only accessor methods for tagMap and eventFunctionMap\n        this._tagConstructorMap = {};\n        this._mediatorInstanceMap = {};\n        this.context = context;\n    }\n    \n    get tagConstructorMap():Object{\n        return this._tagConstructorMap;\n    }\n\n    get mediatorInstanceMap():Object{\n        return this._mediatorInstanceMap;\n    }\n\n    public add(tagName:string, mediatorConstructor:Function, useSingleton:boolean=false){\n        if( this.hasMediatorMap( tagName, mediatorConstructor ) ){\n            return;//don't add the mediatorConstructor/function twice\n        }\n        this.tagConstructorMap[tagName] = {useSingleton:useSingleton, constructor:mediatorConstructor, id:Lavender.UuidUtils.generateUUID(), name:mediatorConstructor.toString()};\n    }\n\n    public remove(tagName:string, mediatorConstructor:Function):string{\n        if( !this.hasMediatorMap( tagName, mediatorConstructor ) ){\n            return;//don't add the mediatorConstructor/function twice\n        }\n\n        let mapId = this.tagConstructorMap[tagName].id;\n\n        this.tagConstructorMap[tagName] = null;\n        delete this.tagConstructorMap[tagName];\n\n        if(this._mediatorInstanceMap[mapId] === null ||  this._mediatorInstanceMap[mapId] === undefined){\n            return;//mo mediators were applied to this mapping\n        }\n        //iterate in reverse over all instance and destroy\n        for( let i=0; i < (this._mediatorInstanceMap[mapId] as Array<IMediator>).length ; i++){\n            this._mediatorInstanceMap[mapId][i].destroy();\n        }\n        //make the array eligible for garbage collection\n        this._mediatorInstanceMap[mapId] = null;\n        delete this._mediatorInstanceMap[mapId];\n\n        return mapId;//return mapId to help enable better tests\n    }\n\n    public apply(tagName:string, componentInstance:Lotus.IComponent):void{\n        let map = this.tagConstructorMap[tagName];\n\n        if(!map){\n            return;//no mediator found for this tag\n        }\n\n        if(this._mediatorInstanceMap[map.id] === null ||  this._mediatorInstanceMap[map.id] === undefined){\n            this._mediatorInstanceMap[map.id] = [];\n        }\n\n        if( map.useSingleton ){\n            if( (this._mediatorInstanceMap[map.id] as Array<IMediator>).length == 0 ){\n                (this._mediatorInstanceMap[map.id] as Array<IMediator>).push( new map.constructor(componentInstance, this.context) );\n            }\n        }else{\n            (this._mediatorInstanceMap[map.id] as Array<IMediator>).push( new map.constructor(componentInstance, this.context) );\n        }\n    }\n\n    public hasMediatorMap(tagName:string, mediatorConstructor:Function):boolean{\n        return (this.tagConstructorMap.hasOwnProperty(tagName) && this.tagConstructorMap[tagName].name == mediatorConstructor.toString())\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/MediatorMap.ts","import {ICommand} from \"./ICommand\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {ActionSuccessEvent} from '../events/ActionSuccessEvent';\nimport {ActionErrorEvent} from '../events/ActionErrorEvent';\nimport {IService} from \"../service/IService\";\nimport {IContext} from \"../../context/IContext\";\n/**\n * Created by dsmiley on 7/28/17.\n */\nexport abstract class AbstractCommand extends Lavender.EventDispatcher implements ICommand{\n    protected service:IService;\n    protected opModel:Lavender.AsyncOperationModel;\n    protected parser:Lavender.IParser;\n    protected errorModel:Lavender.ErrorModel;\n    public context:IContext;\n\n\n    constructor(context:IContext){\n        super();\n        this.context = context;\n        this.service = context.injector.inject('service') as IService;\n        this.parser = context.injector.inject('parser') as Lavender.IParser;\n        this.opModel = context.injector.inject('opModel') as Lavender.AsyncOperationModel;\n        this.errorModel = context.injector.inject('errorModel') as Lavender.ErrorModel;\n    }\n    \n    public execute(event:Lavender.IEvent):string{\n        if (this.service === null || this.service === undefined || this.opModel === null || this.opModel === undefined || this.parser === null || this.parser === undefined) {\n            this.executionError();\n        }\n        this.opModel.asyncOperationComplete = false;\n        this.opModel.asyncOperationCount += 1;\n        return this.executeServiceMethod();\n    }\n\n    //method must return a requestID\n    //Override this method in subclasses\n    protected executeServiceMethod():string{\n        return null;\n    }\n\n    //Override this method in subclasses\n    //it should parse the result and return the resulting Object tree\n    protected parseResponse(result:Lavender.IResult):Object{\n        return null;\n    }\n\n    protected dispatchSuccess(parsedResult:Object):void{\n        let doneEvent = new ActionSuccessEvent(ActionSuccessEvent.SUCCESS,{result:parsedResult});\n        this.dispatch(doneEvent);\n    }\n\n    public success(result:Lavender.IResult):void{\n        try {\n            //result is instance of Lavender.HttpSuccess\n            let parsedResult = this.parseResponse(result);\n            this.dispatchSuccess(parsedResult);\n        } catch (e) {\n            let errorMessage = this.getErrorMessage() + \"\\n\" + e.message + \"\\n\" + e.stack;\n            let errorEvent = new ActionErrorEvent(ActionErrorEvent.ERROR, {message:errorMessage});\n            this.dispatch(errorEvent);\n            let error = {name: 'error', message: errorMessage};\n            this.errorModel.errors.addItem(error);\n            this.errorModel.appError = true;\n        } finally {\n            this.opModel.asyncOperationCount -= 1;\n            if (this.opModel.asyncOperationCount == 0) {\n                this.opModel.asyncOperationComplete = true;\n            }\n            this.destroy();\n        }\n    }\n\n    public fault(fault:Lavender.IFault):void{\n        //fault is an instance of Lavender.HttpFault\n        this.opModel.asyncOperationCount -= 1;\n        if (this.opModel.asyncOperationCount == 0) {\n            this.opModel.asyncOperationComplete = true;\n        }\n        let errorMessage = this.getFaultString() + fault.message;\n        let errorEvent = new ActionErrorEvent(ActionErrorEvent.ERROR, {message:errorMessage});\n        this.dispatch(errorEvent);\n        let error = {name: fault.status, message: errorMessage};\n        this.errorModel.errors.addItem(error);\n        this.errorModel.appError = true;\n        this.destroy();\n    }\n\n    //Override this method in subclasses\n    public onProgress(progress:number):void{\n\n    }\n\n    //Override this method in subclasses\n    protected getFaultString():string{\n        return null;\n    }\n\n    //Override this method in subclasses\n    protected getErrorMessage():string{\n        return null;\n    }\n\n    protected executionError():void{\n        // These properties weren't injected or supplied in the constructor or manually.\n        // They are needed so we throw an error.\n        let msg = this.getExecErrorString();\n        if (this.service === null || this.service === undefined) {\n            msg += \" service\";\n        }\n        if (this.opModel === null || this.opModel) {\n            msg += \", opModel\";\n        }\n        if (this.parser === null || this.parser === undefined) {\n            msg += \", parser\";\n        }\n\n        msg += \".\";\n\n        throw new Error(msg);\n    }\n\n    //Override this method in subclasses\n    protected getExecErrorString():string{\n        return 'Lavender.AbstractServiceAction.prototype.executionError: the following are required: ';\n    }\n\n    public destroy():void{\n        if( this.canListen(ActionErrorEvent.ERROR, this, 'onError') ){\n            this.removeEventListener(ActionErrorEvent.ERROR, this, 'onError');\n        }\n        if( this.canListen(ActionSuccessEvent.SUCCESS, this, 'onSuccess') ){\n            this.removeEventListener(ActionSuccessEvent.SUCCESS, this, 'onSuccess');\n        }\n        this.context = null;\n        this.opModel = null;\n        this.service = null;\n        this.parser = null;\n        this.errorModel = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/command/AbstractCommand.ts","/**\n * Created by dsmiley on 5/18/17.\n */\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class ActionErrorEvent extends Lavender.AbstractEvent{\n    constructor(type:string, payload?:Object){\n        super(type, payload);\n\n        if( !payload || (payload as any).message === null || (payload as any).message === undefined ){\n            throw new Error('Lavender.ActionErrorEvent: payload.message is required');\n        }\n    }\n\n    public static ERROR:string = 'actionError';\n\n    clone(type:string, payload:Object):Lavender.IEvent{\n        return new ActionErrorEvent(this.type, this.payload)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/events/ActionErrorEvent.ts","/**\n * Created by dsmiley on 5/18/17.\n */\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class ActionSuccessEvent extends Lavender.AbstractEvent{\n    constructor(type:string, payload?:Object){\n        super(type, payload);\n\n        if( payload === null || payload === undefined ){\n            throw new Error('Lavender.ActionSuccessEvent: payload is required');\n        }\n    }\n\n    public static SUCCESS:string = 'actionSuccess';\n\n    clone(type:string, payload:Object):Lavender.IEvent{\n        return new ActionSuccessEvent(this.type, this.payload)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/control/events/ActionSuccessEvent.ts","import {IService} from \"./IService\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {HttpServiceFactory} from '../../factory/HttpServiceFactory'\n/**\n * Created by dsmiley on 7/27/17.\n * This is a sample asynchronous action used in unit tests. It can be used as a template though for all asynch actions\n */\nexport class SampleService extends Lavender.AbstractHttpService implements IService{\n    public config:Lavender.Config;\n    public serviceMap:Object;\n\n    constructor(config:Lavender.Config){\n        super();\n        this.config = config;\n        this.serviceMap = (config.hasOwnProperty('serviceMap')) ? config['serviceMap'] :\n        {\n            'echoJSON'\t\t\t\t    : ':3000/echoJSON/key/{0}',\n            'localRequest'\t\t\t\t: ':3000/printondemand/1234/photos/{0}'\n        };\n    }\n    \n    protected getURLWithParams(key:string, args:Array<string>):string{\n        return (args !== null && args !== undefined ) ? Lavender.StringUtil.substitute(this.getURL(key), args) : this.getURL(key);\n    }\n\n    protected getURL(key:string):string{\n        return this.config.baseUrl + this.serviceMap[key];\n    }\n\n    public echoJSON(jsonKey:string, key:string, responder:Lavender.IResponder, paramObj:Object={}, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        //this is a sample service method to be used as an example only. You service methods will be dependent on your service API and model objects\n        //note the use of the key param. This is a very importnat feature and I highly recommend that whatever service you created implements a similar method\n        //don't hard code or otherwise tightly couple the URL creation inside this method. The use of a builder pattern ensures the end point can be changed based on environment\n        var url = this.getURLWithParams(key, [jsonKey]);\n        return this.sendRequest(true, responder, url, paramObj, format, contentType, cache);\n    }\n\n    public testRequestUsingIncludedAPI(key:string, responder:Lavender.IResponder, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        var url = this.getURLWithParams(key, ['54232fc2-7345-4921-8079']);//hard coded args\n        return this.sendRequest(false, responder, url, null, format, contentType, cache);\n    }\n\n    public sendRequest(isPostRequest:boolean, responder:Lavender.IResponder, url:string, paramObj:Object={}, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        var params = JSON.stringify(paramObj);\n\n        if( cache === null || cache === undefined ){\n            cache = false;\n        }\n\n        var httpRequestInstance:Lavender.IHttpService = HttpServiceFactory.getInstance().getHttpService(this.config.serviceCode);\n        httpRequestInstance.addResponder(responder);\n        var requestType = (isPostRequest) ? 'POST' : 'GET';\n        return httpRequestInstance.send(requestType, url, params, contentType, format, cache);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/service/SampleService.ts","/**\n * Created by dsmiley on 10/25/17.\n */\nimport {inject} from '../reflection/InjectorDecorator';\nimport {injectable} from '../reflection/InjectorDecorator';\nimport {bindable} from '../reflection/InjectorDecorator';\nimport {EventDispatcherFactory} from \"../factory/EventDispatcherFactory\";\nimport {HttpServiceFactory} from \"../factory/HttpServiceFactory\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {IContext} from \"../context/IContext\";\n/*\n* This class is used for testing purposes only. It is not included in distributions\n* */\n@injectable\nexport class TestUtils extends Lavender.Subject{\n\n    @inject\n    public eventDispatcherFactory:EventDispatcherFactory;\n    @inject\n    public httpFactory:HttpServiceFactory;\n    @inject\n    public testObject:TestObject;\n    @bindable\n    public bindingTest:Object;\n    public context:IContext;\n\n    constructor(context:IContext){\n        super();\n        this.context = context;\n    }\n\n}\n\nexport class TestObject extends Lavender.Subject{\n    public id = Lavender.UuidUtils.generateUUID();\n    constructor(){\n        super();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/TestUtils.ts","import {AbstractCommand} from \"./AbstractCommand\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {ISampleService} from \"../service/ISampleService\";\nimport {IContext} from \"../../context/IContext\";\n\n/**\n * Created by dsmiley on 7/28/17.\n */\nexport class SampleCommand extends AbstractCommand{\n\n    protected model:Object;//you should implement a concrete model implementation in your projects\n\n    constructor(context:IContext){\n        super(context);\n    }\n\n    protected executeServiceMethod():string{\n        //since services will always be injected by the IOC container always user the interface type\n        return (this.service as ISampleService).testRequestUsingIncludedAPI('localRequest', this);\n    }\n\n    protected parseResponse(result:Lavender.IResult):Object{\n        //since serilization objects will always be injected by the IOC container always user the interface type\n        return this.parser.parse(result);//use this.parser.parse to deserialize results. You'll of course need to implement the parser, our tests just use a generic function that returns the result\n        //most commands would also receive a model injection and the command would update it here\n    }\n\n    protected getFaultString():string{\n        return 'Lotus.SampleCommand a service request error occured';\n    }\n\n    protected getErrorMessage():string{\n        return 'Lotus.SampleCommand an execution error occured ';\n    }\n\n    protected getExecErrorString():string{\n        return 'Lotus.SampleCommand the following are required: ';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/command/SampleCommand.ts","import {ISerializeFactory} from \"./ISerializeFactory\";\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class SerializeFactory implements ISerializeFactory{\n    private static INSTANCE:ISerializeFactory = null;\n\n    constructor(){\n        if (SerializeFactory.INSTANCE != null ) {\n            throw( 'SerializeFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():ISerializeFactory{\n        if (SerializeFactory.INSTANCE == null) {\n            SerializeFactory.INSTANCE = new SerializeFactory();\n        }\n        return SerializeFactory.INSTANCE;\n    }\n\n    /*\n     * Stub for override, this method is just an example of how this factory can be used\n     * */\n    public getServiceResultParser(parserCode:string):Object{\n        let parser;\n        switch( parserCode ){\n            case 'local':\n            case 'remote':\n            default:\n                parser = {};\n                break;\n        }\n        return parser;\n    }\n\n    /*\n     * Stub for override, this method is just an example of how this factory can be used\n     * */\n    public getServiceExporter(exporterCode:string):Object{\n        let exporter;\n        //we resuse parserCode which should really probably be called serializationCode\n        switch( exporterCode ){\n            case 'local':\n            case 'remote':\n            default:\n                exporter = {};\n                break;\n        }\n        return exporter;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/SerializeFactory.ts","import {IService} from \"../control/service/IService\";\nimport {IServiceFactory} from \"./IServiceFactory\";\nimport {SampleService} from \"../control/service/SampleService\";\nimport * as Lavender from 'lavenderjs/lib';\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class ServiceFactory implements IServiceFactory{\n    private static INSTANCE:IServiceFactory = null;\n\n    constructor(){\n        if (ServiceFactory.INSTANCE != null ) {\n            throw( 'ServiceFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IServiceFactory{\n        if (ServiceFactory.INSTANCE == null) {\n            ServiceFactory.INSTANCE = new ServiceFactory();\n        }\n        return ServiceFactory.INSTANCE;\n    }\n\n    public getService(config:Lavender.Config):IService{\n        var service;\n        switch( config.serviceCode ){\n            default:\n                service = new SampleService( config );\n        }\n        return service;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/ServiceFactory.ts","import {AbstractMediator} from \"./AbstractMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\n/**\n * Created by dsmiley on 7/26/17.\n */\n\nexport class ButtonMediator extends AbstractMediator{\n\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        console.log('ButtonMediator constructor called')\n        super(componentInstance,context);\n    }\n\n    protected onClick(event:Event):void{\n        console.log('Im the button mediator, I can handle the component click and dispatch an application event.');\n    }\n\n    protected addEventListeners():void{\n        super.addEventListeners();\n        this.componentInstance.addEventListener('click', this, 'onClick');\n    }\n\n    protected removeEventListeners():void{\n        super.removeEventListeners();\n        this.componentInstance.removeEventListener('click', this, 'onClick');\n    }\n\n    public toString():string{\n        return 'Lotus.ButtonMediator';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/ButtonMediator.ts","import {AbstractMediator} from \"./AbstractMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport class ListMediator extends AbstractMediator{\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        super(componentInstance,context);\n    }\n\n    public toString():string{\n        return 'Lotus.ListMediator';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/ListMediator.ts","import {Context} from \"../context/Context\";\nimport {EventDispatcherFactory} from \"../factory/EventDispatcherFactory\";\nimport {HttpServiceFactory} from \"../factory/HttpServiceFactory\";\nimport {TestObject} from \"../utils/TestUtils\";\n/**\n * This class is used for testing purposes only. It is not included in distributions\n */\nexport class TestContext extends Context{\n\n    constructor(model:Object, params:Object){\n        super(model,params);\n    }\n\n    public toString():string{\n        return 'TestContext';\n    }\n\n    public mapObjects(){\n        this.injector.mapObject(TestObject, TestObject, false);\n        this.injector.mapSingletonInstance(EventDispatcherFactory, EventDispatcherFactory.getInstance());\n        this.injector.mapSingletonInstance(HttpServiceFactory, HttpServiceFactory.getInstance());\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/TestContext.ts","/**\n * Created by dsmiley on 7/24/17.\n */\n//IMPORTANT: comment these out after testing so they are not included in the release!!!\n//they will add code bloat and are only used to test decorator functions\nexport * from './utils/TestUtils';\nexport * from './utils/TestContext';\n\nexport * from './context/IInjector';\nexport * from './context/Injector';\nexport * from './context/CommandMap';\nexport * from './context/IMediatorMap';\nexport * from './context/MediatorMap';\nexport * from './context/ComponentMap';\nexport * from './context/Context';\nexport * from './reflection/InjectorDecorator';\nexport * from './factory/IEventDispatcherFactory';\nexport * from './factory/EventDispatcherFactory';\nexport * from './factory/ISerializeFactory';\nexport * from './factory/SerializeFactory';\nexport * from './factory/IHttpServiceFactory';\nexport * from './factory/HttpServiceFactory';\nexport * from './factory/IServiceFactory';\nexport * from './factory/ServiceFactory';\nexport * from './control/service/IService';\nexport * from './control/service/SampleService';\nexport * from './control/service/ISampleService';\nexport * from './control/events/ActionSuccessEvent';\nexport * from './control/events/ActionErrorEvent';\nexport * from './control/command/AbstractCommand';\nexport * from './control/command/SampleCommand';\nexport * from './mediators/IMediator';\nexport * from './mediators/AbstractMediator';\nexport * from './mediators/ButtonMediator';\nexport * from './mediators/ListMediator';\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 23\n// module chunks = 0 1","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        HashMap.create = supportsCreate\r\n            ? function () { return MakeDictionary(Object.create(null)); }\r\n            : supportsProto\r\n                ? function () { return MakeDictionary({ __proto__: null }); }\r\n                : function () { return MakeDictionary({}); };\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, propertyKey, attributes) {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                throw new TypeError();\r\n            if (IsNull(attributes))\r\n                attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var keys = [];\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        var k = 0;\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            var nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument) {\r\n        switch (Type(argument)) {\r\n            case 3 /* String */: return true;\r\n            case 4 /* Symbol */: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = HashMap.create();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reflect-metadata/Reflect.js\n// module id = 24\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 25\n// module chunks = 0 1"],"sourceRoot":""}