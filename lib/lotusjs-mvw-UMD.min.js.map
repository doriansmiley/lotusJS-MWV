{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///lotusjs-mvw-UMD.min.js","webpack:///webpack/bootstrap 78136b62bdb18f30b06e?f307","webpack:///external \"Lavender\"?5437","webpack:///./src/mediators/AbstractMediator.ts?c8ca","webpack:///external \"Lotus\"?097d","webpack:///./src/context/CommandMap.ts?45e2","webpack:///./src/context/Injector.ts?d857","webpack:///./src/context/MediatorMap.ts?50bc","webpack:///./src/control/command/AbstractCommand.ts?ec08","webpack:///./src/control/events/ActionErrorEvent.ts?941e","webpack:///./src/control/events/ActionSuccessEvent.ts?a0e4","webpack:///./src/control/service/SampleService.ts?6b65","webpack:///./src/factory/EventDispatcherFactory.ts?862a","webpack:///./src/factory/HttpServiceFactory.ts?1dc6","webpack:///./src/context/ComponentMap.ts?33bf","webpack:///./src/context/Context.ts?7eb9","webpack:///./src/control/command/SampleCommand.ts?d4cf","webpack:///./src/factory/SerializeFactory.ts?ed9b","webpack:///./src/factory/ServiceFactory.ts?2162","webpack:///./src/mediators/ButtonMediator.ts?caee","webpack:///./src/mediators/ListMediator.ts?f914","webpack:///./src/reflection/InjectorDecorator.ts?aec1","webpack:///./src/index.ts?eac3","webpack:///./~/process/browser.js?82e4","webpack:///./~/reflect-metadata/Reflect.js?ae60","webpack:///(webpack)/buildin/global.js?3698"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Lotus","Lavender","AbstractMediator","_super","componentInstance","context","_this","id","UuidUtils","generateUUID","ready","init","addEventListener","ComponentEvent","READY","_id","set","notify","_componentInstance","_context","addEventListeners","removeEventListeners","canListen","removeEventListener","setUpBindings","removeBindings","binder","unbindAll","toString","destroy","Subject","CommandMap","eventFunctionMap","instanceMap","addCommand","eventType","handler","functionName","useSingleton","undefined","hasCommandMap","push","eventDispatcher","hasCommand","mapArray","itemIndex","length","item","removeCommand","shift","pop","head","slice","tail","concat","removeAllCommands","removeAllEventListeners","routeEventToCommand","event","type","instance","Injector","typeMap","objectMap","mapObject","key","mapIndex","forEach","index","mapSingletonInstance","inject","map","Error","MediatorMap","_tagConstructorMap","_mediatorInstanceMap","add","tagName","mediatorConstructor","hasMediatorMap","tagConstructorMap","remove","mapId","apply","ActionSuccessEvent_1","ActionErrorEvent_1","AbstractCommand","service","injector","parser","opModel","errorModel","execute","executionError","asyncOperationComplete","asyncOperationCount","executeServiceMethod","parseResponse","result","dispatchSuccess","parsedResult","doneEvent","ActionSuccessEvent","SUCCESS","dispatch","success","e","errorMessage","getErrorMessage","message","stack","errorEvent","ActionErrorEvent","ERROR","error","errors","addItem","appError","fault","getFaultString","status","onProgress","progress","msg","getExecErrorString","EventDispatcher","payload","clone","AbstractEvent","HttpServiceFactory_1","SampleService","config","serviceMap","echoJSON","localRequest","getURLWithParams","args","StringUtil","substitute","getURL","baseUrl","jsonKey","responder","paramObj","format","contentType","cache","url","sendRequest","testRequestUsingIncludedAPI","isPostRequest","params","JSON","stringify","httpRequestInstance","HttpServiceFactory","getInstance","getHttpService","serviceCode","addResponder","requestType","send","AbstractHttpService","EventDispatcherFactory","INSTANCE","getEventDispatcher","eventDispatcherCode","dispatcher","code","httpService","XhrHttpService","ComponentMap","mapMediators","tagInstance","mediatorMap","toLowerCase","lotusComponentInstance","CommandMap_1","Injector_1","MediatorMap_1","EventDispatcherFactory_1","Context","commandMap","startUp","mapCommands","mapObjects","AbstractCommand_1","SampleCommand","parse","SerializeFactory","getServiceResultParser","parserCode","getServiceExporter","exporterCode","exporter","SampleService_1","ServiceFactory","getService","AbstractMediator_1","ButtonMediator","console","log","onClick","ListMediator","target","t","Reflect","getMetadata","injectable","f","_i","arguments","getPrototypeOf","resolveInjections","bind","bindable","_val","setter","newVal","__export","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","global","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","delete","size","targetMetadata","Metadata","decorated","descriptor","O","P","Create","_Map","MetadataKey","parent","OrdinaryGetPrototypeOf","ToBoolean","has","MetadataValue","ownKeys","parentKeys","_Set","keys","ownKeys_1","hasKey","_a","parentKeys_1","keysObj","iterator","GetIterator","k","next","IteratorStep","nextValue","IteratorValue","IteratorClose","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","toPrimitiveSymbol","OrdinaryToPrimitive","toString_1","IsCallable","valueOf","toString_2","argument","ToString","isArray","V","func","obj","method","iteratorSymbol","iterResult","done","proto","functionPrototype","prototypeProto","MakeDictionary","HashMap","hasOwn","supportsSymbol","Symbol","toPrimitive","supportsCreate","supportsProto","downLevel","Function","usePolyfill","Map","entries","getKey","_","getValue","getEntry","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","_find","clear","insert","indexOf","Set","_map","_WeakMap","WeakMap","CreateUniqueKey","CreateUUID","GetOrCreateWeakMapTable","rootKey","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","data","UUID_SIZE","offset","byte","_key","table","__global","self","g","eval","window"],"mappings":"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","file":"lotusjs-mvw-UMD.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LotusMVW\", [\"Lavender\", \"Lotus\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LotusMVW\"] = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse\n\t\troot[\"LotusMVW\"] = factory(root[\"Lavender\"], root[\"Lotus\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LotusMVW\", [\"Lavender\", \"Lotus\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LotusMVW\"] = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse\n\t\troot[\"LotusMVW\"] = factory(root[\"Lavender\"], root[\"Lotus\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lotus = __webpack_require__(2);\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar AbstractMediator = /** @class */ (function (_super) {\r\n    __extends(AbstractMediator, _super);\r\n    function AbstractMediator(componentInstance, context) {\r\n        var _this = _super.call(this) || this;\r\n        _this.id = Lavender.UuidUtils.generateUUID();\r\n        _this.componentInstance = componentInstance;\r\n        _this.context = context;\r\n        if (!_this.componentInstance.ready) {\r\n            _this.componentInstance.addEventListener(Lotus.ComponentEvent.READY, _this, 'init');\r\n        }\r\n        else {\r\n            _this.init();\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AbstractMediator.prototype, \"id\", {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        set: function (value) {\r\n            this._id = value;\r\n            this.notify(value, 'id');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMediator.prototype, \"componentInstance\", {\r\n        get: function () {\r\n            return this._componentInstance;\r\n        },\r\n        set: function (value) {\r\n            this._componentInstance = value;\r\n            this.notify(value, 'componentInstance');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMediator.prototype, \"context\", {\r\n        get: function () {\r\n            return this._context;\r\n        },\r\n        set: function (value) {\r\n            this._context = value;\r\n            this.notify(value, 'context');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMediator.prototype.addEventListeners = function () {\r\n    };\r\n    AbstractMediator.prototype.removeEventListeners = function () {\r\n        if (this.componentInstance.canListen(Lotus.ComponentEvent.READY, this, 'init')) {\r\n            this.componentInstance.removeEventListener(Lotus.ComponentEvent.READY, this, 'init');\r\n        }\r\n    };\r\n    AbstractMediator.prototype.setUpBindings = function () {\r\n    };\r\n    AbstractMediator.prototype.removeBindings = function () {\r\n        this.binder.unbindAll();\r\n    };\r\n    AbstractMediator.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    AbstractMediator.prototype.init = function () {\r\n        this.addEventListeners();\r\n        this.setUpBindings();\r\n    };\r\n    AbstractMediator.prototype.destroy = function () {\r\n        this.removeEventListeners();\r\n        this.removeBindings();\r\n        this.id = null;\r\n        this.componentInstance = null;\r\n    };\r\n    return AbstractMediator;\r\n}(Lavender.Subject));\r\nexports.AbstractMediator = AbstractMediator;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CommandMap = /** @class */ (function () {\r\n    function CommandMap(context) {\r\n        //Note: this could be improved by creating read only accessor methods for instanceMap and eventFunctionMap\r\n        this.eventFunctionMap = {};\r\n        this.instanceMap = {};\r\n        this.context = context;\r\n    }\r\n    CommandMap.prototype.addCommand = function (eventType, handler, functionName, useSingleton) {\r\n        if (functionName === void 0) { functionName = 'execute'; }\r\n        if (useSingleton === void 0) { useSingleton = false; }\r\n        if (this.eventFunctionMap[eventType] === null || this.eventFunctionMap[eventType] === undefined) {\r\n            this.eventFunctionMap[eventType] = [];\r\n        }\r\n        if (this.hasCommandMap(eventType, handler, functionName)) {\r\n            return; //don't add the handler/function twice\r\n        }\r\n        this.eventFunctionMap[eventType].push({ eventType: eventType, handler: handler, functionName: functionName, useSingleton: useSingleton });\r\n        if (useSingleton) {\r\n            if (this.instanceMap[eventType] === null || this.instanceMap[eventType] === undefined) {\r\n                this.instanceMap[eventType] = {};\r\n            }\r\n            if (this.instanceMap[eventType][handler] === null || this.instanceMap[eventType][handler] === undefined) {\r\n                this.instanceMap[eventType][handler] = new handler(this.context);\r\n            }\r\n        }\r\n        if (!this.context.eventDispatcher.canListen(eventType, this, 'routeEventToCommand')) {\r\n            this.context.eventDispatcher.addEventListener(eventType, this, 'routeEventToCommand');\r\n        }\r\n    };\r\n    CommandMap.prototype.hasCommandMap = function (eventType, handler, functionName) {\r\n        var hasCommand = false;\r\n        if (this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined) {\r\n            var mapArray = this.eventFunctionMap[eventType];\r\n            for (var itemIndex = 0; itemIndex < mapArray.length; itemIndex++) {\r\n                var item = mapArray[itemIndex];\r\n                if (item.handler == handler && item.functionName == functionName) {\r\n                    hasCommand = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return hasCommand;\r\n    };\r\n    CommandMap.prototype.removeCommand = function (eventType, handler) {\r\n        if (this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined) {\r\n            var mapArray = this.eventFunctionMap[eventType];\r\n            for (var itemIndex = mapArray.length - 1; itemIndex >= 0; itemIndex--) {\r\n                var item = mapArray[itemIndex];\r\n                if (item.handler == handler) {\r\n                    //remove the item form the array\r\n                    switch (itemIndex) {\r\n                        case 0:\r\n                            mapArray.shift();\r\n                            break;\r\n                        case mapArray.length - 1:\r\n                            mapArray.pop();\r\n                            break;\r\n                        default:\r\n                            var head = mapArray.slice(0, itemIndex);\r\n                            var tail = mapArray.slice(itemIndex + 1);\r\n                            mapArray = head.concat(tail);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (this.eventFunctionMap[eventType].length <= 0) {\r\n                this.context.eventDispatcher.removeEventListener(eventType, this, 'routeEventToCommand');\r\n                delete this.eventFunctionMap[eventType];\r\n            }\r\n        }\r\n    };\r\n    CommandMap.prototype.removeAllCommands = function () {\r\n        this.eventFunctionMap = {};\r\n        this.instanceMap = {};\r\n        this.context.eventDispatcher.removeAllEventListeners(this);\r\n    };\r\n    CommandMap.prototype.routeEventToCommand = function (event) {\r\n        if (this.eventFunctionMap[event.type] !== null && this.eventFunctionMap[event.type] !== undefined) {\r\n            var mapArray = this.eventFunctionMap[event.type];\r\n            for (var itemIndex = 0; itemIndex < mapArray.length; itemIndex++) {\r\n                var item = mapArray[itemIndex];\r\n                if (item.useSingleton) {\r\n                    this.instanceMap[item.event.type][item.handler][item.functionName]();\r\n                }\r\n                else {\r\n                    var instance = void 0;\r\n                    if (typeof item.handler === 'object') {\r\n                        instance = item.handler;\r\n                    }\r\n                    else {\r\n                        //IMPORTANT: only constructor function will get the context! This is by design as it's assumed preconstructed objects have all required dependencies\r\n                        instance = new item.handler(this.context);\r\n                    }\r\n                    instance[item.functionName](event);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return CommandMap;\r\n}());\r\nexports.CommandMap = CommandMap;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Injector = /** @class */ (function () {\r\n    function Injector(context) {\r\n        this.typeMap = [];\r\n        this.context = context;\r\n        this.objectMap = {};\r\n    }\r\n    Injector.prototype.mapObject = function (key, constructor, useSingleton) {\r\n        if (useSingleton === void 0) { useSingleton = false; }\r\n        if (typeof key == 'function') {\r\n            var mapIndex = -1;\r\n            this.typeMap.forEach(function (value, index) {\r\n                if (value.constructor == constructor) {\r\n                    mapIndex = index;\r\n                    return false;\r\n                }\r\n            });\r\n            //TODO:refactror to overrite index\r\n            if (mapIndex < 0) {\r\n                this.typeMap.push({ constructor: constructor, useSingleton: useSingleton, instance: null, type: key });\r\n            }\r\n        }\r\n        else {\r\n            //instantiate singleton instance upon request is more efficient\r\n            this.objectMap[key] = { constructor: constructor, useSingleton: useSingleton, instance: null };\r\n        }\r\n    };\r\n    Injector.prototype.mapSingletonInstance = function (key, instance) {\r\n        if (typeof key == 'function') {\r\n            var mapIndex = -1;\r\n            this.typeMap.forEach(function (value, index) {\r\n                if (value.instance == instance) {\r\n                    mapIndex = index;\r\n                    return false;\r\n                }\r\n            });\r\n            //TODO:refactror to overrite index\r\n            if (mapIndex < 0) {\r\n                this.typeMap.push({ constructor: null, useSingleton: true, instance: instance });\r\n            }\r\n        }\r\n        else {\r\n            //map injector as sigleton using the supplied instance\r\n            //this method is very useful for mapping objects that are themselves singletons and may have already been constructed\r\n            //prime example is the model wich generally is constructed before injections are defined\r\n            this.objectMap[key] = { constructor: null, useSingleton: true, instance: instance };\r\n        }\r\n    };\r\n    Injector.prototype.inject = function (key) {\r\n        if (typeof key == 'function') {\r\n            var map;\r\n            this.typeMap.forEach(function (value, index) {\r\n                if (value.type == key || value.instance instanceof key) {\r\n                    map = value;\r\n                    return false;\r\n                }\r\n            });\r\n            if (map) {\r\n                if (map['useSingleton']) {\r\n                    if (map['instance'] === null) {\r\n                        map['instance'] = new map.constructor();\r\n                    }\r\n                    return map['instance'];\r\n                }\r\n                else {\r\n                    return new map.constructor();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.objectMap[key] !== null && this.objectMap[key] !== undefined) {\r\n                if (this.objectMap[key].useSingleton) {\r\n                    if (this.objectMap[key].instance === null) {\r\n                        this.objectMap[key].instance = new this.objectMap[key].constructor();\r\n                    }\r\n                    return this.objectMap[key].instance;\r\n                }\r\n                else {\r\n                    return new this.objectMap[key].constructor();\r\n                }\r\n            }\r\n        }\r\n        throw new Error('Lotus.Injector.prototype.getObject: could not find object for key: ' + key);\r\n    };\r\n    return Injector;\r\n}());\r\nexports.Injector = Injector;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar MediatorMap = /** @class */ (function () {\r\n    function MediatorMap(context) {\r\n        //Note: this could be improved by creating read only accessor methods for tagMap and eventFunctionMap\r\n        this._tagConstructorMap = {};\r\n        this._mediatorInstanceMap = {};\r\n        this.context = context;\r\n    }\r\n    Object.defineProperty(MediatorMap.prototype, \"tagConstructorMap\", {\r\n        get: function () {\r\n            return this._tagConstructorMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MediatorMap.prototype, \"mediatorInstanceMap\", {\r\n        get: function () {\r\n            return this._mediatorInstanceMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MediatorMap.prototype.add = function (tagName, mediatorConstructor, useSingleton) {\r\n        if (useSingleton === void 0) { useSingleton = false; }\r\n        if (this.hasMediatorMap(tagName, mediatorConstructor)) {\r\n            return; //don't add the mediatorConstructor/function twice\r\n        }\r\n        this.tagConstructorMap[tagName] = { useSingleton: useSingleton, constructor: mediatorConstructor, id: Lavender.UuidUtils.generateUUID(), name: mediatorConstructor.toString() };\r\n    };\r\n    MediatorMap.prototype.remove = function (tagName, mediatorConstructor) {\r\n        if (!this.hasMediatorMap(tagName, mediatorConstructor)) {\r\n            return; //don't add the mediatorConstructor/function twice\r\n        }\r\n        var mapId = this.tagConstructorMap[tagName].id;\r\n        this.tagConstructorMap[tagName] = null;\r\n        delete this.tagConstructorMap[tagName];\r\n        if (this._mediatorInstanceMap[mapId] === null || this._mediatorInstanceMap[mapId] === undefined) {\r\n            return; //mo mediators were applied to this mapping\r\n        }\r\n        //iterate in reverse over all instance and destroy\r\n        for (var i = 0; i < this._mediatorInstanceMap[mapId].length; i++) {\r\n            this._mediatorInstanceMap[mapId][i].destroy();\r\n        }\r\n        //make the array eligible for garbage collection\r\n        this._mediatorInstanceMap[mapId] = null;\r\n        delete this._mediatorInstanceMap[mapId];\r\n        return mapId; //return mapId to help enable better tests\r\n    };\r\n    MediatorMap.prototype.apply = function (tagName, componentInstance) {\r\n        var map = this.tagConstructorMap[tagName];\r\n        if (!map) {\r\n            return; //no mediator found for this tag\r\n        }\r\n        if (this._mediatorInstanceMap[map.id] === null || this._mediatorInstanceMap[map.id] === undefined) {\r\n            this._mediatorInstanceMap[map.id] = [];\r\n        }\r\n        if (map.useSingleton) {\r\n            if (this._mediatorInstanceMap[map.id].length == 0) {\r\n                this._mediatorInstanceMap[map.id].push(new map.constructor(componentInstance, this.context));\r\n            }\r\n        }\r\n        else {\r\n            this._mediatorInstanceMap[map.id].push(new map.constructor(componentInstance, this.context));\r\n        }\r\n    };\r\n    MediatorMap.prototype.hasMediatorMap = function (tagName, mediatorConstructor) {\r\n        return (this.tagConstructorMap.hasOwnProperty(tagName) && this.tagConstructorMap[tagName].name == mediatorConstructor.toString());\r\n    };\r\n    return MediatorMap;\r\n}());\r\nexports.MediatorMap = MediatorMap;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\nvar ActionSuccessEvent_1 = __webpack_require__(8);\r\nvar ActionErrorEvent_1 = __webpack_require__(7);\r\n/**\r\n * Created by dsmiley on 7/28/17.\r\n */\r\nvar AbstractCommand = /** @class */ (function (_super) {\r\n    __extends(AbstractCommand, _super);\r\n    function AbstractCommand(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this.context = context;\r\n        _this.service = context.injector.inject('service');\r\n        _this.parser = context.injector.inject('parser');\r\n        _this.opModel = context.injector.inject('opModel');\r\n        _this.errorModel = context.injector.inject('errorModel');\r\n        return _this;\r\n    }\r\n    AbstractCommand.prototype.execute = function (event) {\r\n        if (this.service === null || this.service === undefined || this.opModel === null || this.opModel === undefined || this.parser === null || this.parser === undefined) {\r\n            this.executionError();\r\n        }\r\n        this.opModel.asyncOperationComplete = false;\r\n        this.opModel.asyncOperationCount += 1;\r\n        return this.executeServiceMethod();\r\n    };\r\n    //method must return a requestID\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.executeServiceMethod = function () {\r\n        return null;\r\n    };\r\n    //Override this method in subclasses\r\n    //it should parse the result and return the resulting Object tree\r\n    AbstractCommand.prototype.parseResponse = function (result) {\r\n        return null;\r\n    };\r\n    AbstractCommand.prototype.dispatchSuccess = function (parsedResult) {\r\n        var doneEvent = new ActionSuccessEvent_1.ActionSuccessEvent(ActionSuccessEvent_1.ActionSuccessEvent.SUCCESS, { result: parsedResult });\r\n        this.dispatch(doneEvent);\r\n    };\r\n    AbstractCommand.prototype.success = function (result) {\r\n        try {\r\n            //result is instance of Lavender.HttpSuccess\r\n            var parsedResult = this.parseResponse(result);\r\n            this.dispatchSuccess(parsedResult);\r\n        }\r\n        catch (e) {\r\n            var errorMessage = this.getErrorMessage() + \"\\n\" + e.message + \"\\n\" + e.stack;\r\n            var errorEvent = new ActionErrorEvent_1.ActionErrorEvent(ActionErrorEvent_1.ActionErrorEvent.ERROR, { message: errorMessage });\r\n            this.dispatch(errorEvent);\r\n            var error = { name: 'error', message: errorMessage };\r\n            this.errorModel.errors.addItem(error);\r\n            this.errorModel.appError = true;\r\n        }\r\n        finally {\r\n            this.opModel.asyncOperationCount -= 1;\r\n            if (this.opModel.asyncOperationCount == 0) {\r\n                this.opModel.asyncOperationComplete = true;\r\n            }\r\n            this.destroy();\r\n        }\r\n    };\r\n    AbstractCommand.prototype.fault = function (fault) {\r\n        //fault is an instance of Lavender.HttpFault\r\n        this.opModel.asyncOperationCount -= 1;\r\n        if (this.opModel.asyncOperationCount == 0) {\r\n            this.opModel.asyncOperationComplete = true;\r\n        }\r\n        var errorMessage = this.getFaultString() + fault.message;\r\n        var errorEvent = new ActionErrorEvent_1.ActionErrorEvent(ActionErrorEvent_1.ActionErrorEvent.ERROR, { message: errorMessage });\r\n        this.dispatch(errorEvent);\r\n        var error = { name: fault.status, message: errorMessage };\r\n        this.errorModel.errors.addItem(error);\r\n        this.errorModel.appError = true;\r\n        this.destroy();\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.onProgress = function (progress) {\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.getFaultString = function () {\r\n        return null;\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.getErrorMessage = function () {\r\n        return null;\r\n    };\r\n    AbstractCommand.prototype.executionError = function () {\r\n        // These properties weren't injected or supplied in the constructor or manually.\r\n        // They are needed so we throw an error.\r\n        var msg = this.getExecErrorString();\r\n        if (this.service === null || this.service === undefined) {\r\n            msg += \" service\";\r\n        }\r\n        if (this.opModel === null || this.opModel) {\r\n            msg += \", opModel\";\r\n        }\r\n        if (this.parser === null || this.parser === undefined) {\r\n            msg += \", parser\";\r\n        }\r\n        msg += \".\";\r\n        throw new Error(msg);\r\n    };\r\n    //Override this method in subclasses\r\n    AbstractCommand.prototype.getExecErrorString = function () {\r\n        return 'Lavender.AbstractServiceAction.prototype.executionError: the following are required: ';\r\n    };\r\n    AbstractCommand.prototype.destroy = function () {\r\n        if (this.canListen(ActionErrorEvent_1.ActionErrorEvent.ERROR, this, 'onError')) {\r\n            this.removeEventListener(ActionErrorEvent_1.ActionErrorEvent.ERROR, this, 'onError');\r\n        }\r\n        if (this.canListen(ActionSuccessEvent_1.ActionSuccessEvent.SUCCESS, this, 'onSuccess')) {\r\n            this.removeEventListener(ActionSuccessEvent_1.ActionSuccessEvent.SUCCESS, this, 'onSuccess');\r\n        }\r\n        this.context = null;\r\n        this.opModel = null;\r\n        this.service = null;\r\n        this.parser = null;\r\n        this.errorModel = null;\r\n    };\r\n    return AbstractCommand;\r\n}(Lavender.EventDispatcher));\r\nexports.AbstractCommand = AbstractCommand;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 5/18/17.\r\n */\r\nvar Lavender = __webpack_require__(0);\r\nvar ActionErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ActionErrorEvent, _super);\r\n    function ActionErrorEvent(type, payload) {\r\n        var _this = _super.call(this, type, payload) || this;\r\n        if (!payload || payload.message === null || payload.message === undefined) {\r\n            throw new Error('Lavender.ActionErrorEvent: payload.message is required');\r\n        }\r\n        return _this;\r\n    }\r\n    ActionErrorEvent.prototype.clone = function (type, payload) {\r\n        return new ActionErrorEvent(this.type, this.payload);\r\n    };\r\n    ActionErrorEvent.ERROR = 'actionError';\r\n    return ActionErrorEvent;\r\n}(Lavender.AbstractEvent));\r\nexports.ActionErrorEvent = ActionErrorEvent;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 5/18/17.\r\n */\r\nvar Lavender = __webpack_require__(0);\r\nvar ActionSuccessEvent = /** @class */ (function (_super) {\r\n    __extends(ActionSuccessEvent, _super);\r\n    function ActionSuccessEvent(type, payload) {\r\n        var _this = _super.call(this, type, payload) || this;\r\n        if (payload === null || payload === undefined) {\r\n            throw new Error('Lavender.ActionSuccessEvent: payload is required');\r\n        }\r\n        return _this;\r\n    }\r\n    ActionSuccessEvent.prototype.clone = function (type, payload) {\r\n        return new ActionSuccessEvent(this.type, this.payload);\r\n    };\r\n    ActionSuccessEvent.SUCCESS = 'actionSuccess';\r\n    return ActionSuccessEvent;\r\n}(Lavender.AbstractEvent));\r\nexports.ActionSuccessEvent = ActionSuccessEvent;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\nvar HttpServiceFactory_1 = __webpack_require__(11);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n * This is a sample asynchronous action used in unit tests. It can be used as a template though for all asynch actions\r\n */\r\nvar SampleService = /** @class */ (function (_super) {\r\n    __extends(SampleService, _super);\r\n    function SampleService(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.config = config;\r\n        _this.serviceMap = (config.hasOwnProperty('serviceMap')) ? config['serviceMap'] :\r\n            {\r\n                'echoJSON': ':3000/echoJSON/key/{0}',\r\n                'localRequest': ':3000/printondemand/1234/photos/{0}'\r\n            };\r\n        return _this;\r\n    }\r\n    SampleService.prototype.getURLWithParams = function (key, args) {\r\n        return (args !== null && args !== undefined) ? Lavender.StringUtil.substitute(this.getURL(key), args) : this.getURL(key);\r\n    };\r\n    SampleService.prototype.getURL = function (key) {\r\n        return this.config.baseUrl + this.serviceMap[key];\r\n    };\r\n    SampleService.prototype.echoJSON = function (jsonKey, key, responder, paramObj, format, contentType, cache) {\r\n        if (paramObj === void 0) { paramObj = {}; }\r\n        if (format === void 0) { format = 'json'; }\r\n        if (contentType === void 0) { contentType = 'application/json'; }\r\n        if (cache === void 0) { cache = false; }\r\n        //this is a sample service method to be used as an example only. You service methods will be dependent on your service API and model objects\r\n        //note the use of the key param. This is a very importnat feature and I highly recommend that whatever service you created implements a similar method\r\n        //don't hard code or otherwise tightly couple the URL creation inside this method. The use of a builder pattern ensures the end point can be changed based on environment\r\n        var url = this.getURLWithParams(key, [jsonKey]);\r\n        return this.sendRequest(true, responder, url, paramObj, format, contentType, cache);\r\n    };\r\n    SampleService.prototype.testRequestUsingIncludedAPI = function (key, responder, format, contentType, cache) {\r\n        if (format === void 0) { format = 'json'; }\r\n        if (contentType === void 0) { contentType = 'application/json'; }\r\n        if (cache === void 0) { cache = false; }\r\n        var url = this.getURLWithParams(key, ['54232fc2-7345-4921-8079']); //hard coded args\r\n        return this.sendRequest(false, responder, url, null, format, contentType, cache);\r\n    };\r\n    SampleService.prototype.sendRequest = function (isPostRequest, responder, url, paramObj, format, contentType, cache) {\r\n        if (paramObj === void 0) { paramObj = {}; }\r\n        if (format === void 0) { format = 'json'; }\r\n        if (contentType === void 0) { contentType = 'application/json'; }\r\n        if (cache === void 0) { cache = false; }\r\n        var params = JSON.stringify(paramObj);\r\n        if (cache === null || cache === undefined) {\r\n            cache = false;\r\n        }\r\n        var httpRequestInstance = HttpServiceFactory_1.HttpServiceFactory.getInstance().getHttpService(this.config.serviceCode);\r\n        httpRequestInstance.addResponder(responder);\r\n        var requestType = (isPostRequest) ? 'POST' : 'GET';\r\n        return httpRequestInstance.send(requestType, url, params, contentType, format, cache);\r\n    };\r\n    return SampleService;\r\n}(Lavender.AbstractHttpService));\r\nexports.SampleService = SampleService;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar EventDispatcherFactory = /** @class */ (function () {\r\n    function EventDispatcherFactory() {\r\n        if (EventDispatcherFactory.INSTANCE != null) {\r\n            throw ('EventDispatcherFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    EventDispatcherFactory.getInstance = function () {\r\n        if (EventDispatcherFactory.INSTANCE == null) {\r\n            EventDispatcherFactory.INSTANCE = new EventDispatcherFactory();\r\n        }\r\n        return EventDispatcherFactory.INSTANCE;\r\n    };\r\n    EventDispatcherFactory.prototype.getEventDispatcher = function (eventDispatcherCode) {\r\n        if (eventDispatcherCode === void 0) { eventDispatcherCode = 'Lavender.EventDispatcher'; }\r\n        var dispatcher;\r\n        //config.daoCode defaults to jquery\r\n        switch (eventDispatcherCode) {\r\n            case \"Lavender.EventDispatcher\":\r\n            default:\r\n                dispatcher = new Lavender.EventDispatcher();\r\n        }\r\n        return dispatcher;\r\n    };\r\n    EventDispatcherFactory.INSTANCE = null;\r\n    return EventDispatcherFactory;\r\n}());\r\nexports.EventDispatcherFactory = EventDispatcherFactory;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Lavender = __webpack_require__(0);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar HttpServiceFactory = /** @class */ (function () {\r\n    function HttpServiceFactory() {\r\n        if (HttpServiceFactory.INSTANCE != null) {\r\n            throw ('HttpServiceFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    HttpServiceFactory.getInstance = function () {\r\n        if (HttpServiceFactory.INSTANCE == null) {\r\n            HttpServiceFactory.INSTANCE = new HttpServiceFactory();\r\n        }\r\n        return HttpServiceFactory.INSTANCE;\r\n    };\r\n    //override this method to return custon IService implementations\r\n    HttpServiceFactory.prototype.getHttpService = function (code) {\r\n        if (code === void 0) { code = 'Lavender.XhrHttpService'; }\r\n        var httpService;\r\n        switch (code) {\r\n            case \"Lavender.XhrHttpService\":\r\n            default:\r\n                httpService = new Lavender.XhrHttpService();\r\n                break;\r\n        }\r\n        return httpService;\r\n    };\r\n    HttpServiceFactory.INSTANCE = null;\r\n    return HttpServiceFactory;\r\n}());\r\nexports.HttpServiceFactory = HttpServiceFactory;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 9/20/17.\r\n */\r\nvar Lotus = __webpack_require__(2);\r\nvar ComponentMap = /** @class */ (function (_super) {\r\n    __extends(ComponentMap, _super);\r\n    function ComponentMap(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    ComponentMap.prototype.mapMediators = function (tagInstance) {\r\n        this.context.mediatorMap.apply(tagInstance.tagName.toLowerCase(), tagInstance.lotusComponentInstance);\r\n    };\r\n    return ComponentMap;\r\n}(Lotus.ComponentMap));\r\nexports.ComponentMap = ComponentMap;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 9/20/17.\r\n */\r\nvar Lotus = __webpack_require__(2);\r\nvar CommandMap_1 = __webpack_require__(3);\r\nvar Injector_1 = __webpack_require__(4);\r\nvar MediatorMap_1 = __webpack_require__(5);\r\nvar EventDispatcherFactory_1 = __webpack_require__(10);\r\nvar Context = /** @class */ (function (_super) {\r\n    __extends(Context, _super);\r\n    function Context(config, params) {\r\n        var _this = _super.call(this, config, params) || this;\r\n        //IMPORTANT: must occur first so application event bus is configured\r\n        _this.eventDispatcher = EventDispatcherFactory_1.EventDispatcherFactory.getInstance().getEventDispatcher();\r\n        _this.commandMap = new CommandMap_1.CommandMap(_this); //create factory if we require sub classes one day\r\n        _this.injector = new Injector_1.Injector(_this); //create factory if we require sub classes one day\r\n        _this.mediatorMap = new MediatorMap_1.MediatorMap(_this);\r\n        _this.startUp();\r\n        return _this;\r\n    }\r\n    Context.prototype.startUp = function () {\r\n        _super.prototype.startUp.call(this);\r\n        this.mapCommands();\r\n        this.mapObjects();\r\n        this.mapMediators();\r\n    };\r\n    Context.prototype.mapCommands = function () {\r\n    };\r\n    Context.prototype.mapObjects = function () {\r\n    };\r\n    Context.prototype.mapMediators = function () {\r\n    };\r\n    return Context;\r\n}(Lotus.Context));\r\nexports.Context = Context;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractCommand_1 = __webpack_require__(6);\r\n/**\r\n * Created by dsmiley on 7/28/17.\r\n */\r\nvar SampleCommand = /** @class */ (function (_super) {\r\n    __extends(SampleCommand, _super);\r\n    function SampleCommand(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    SampleCommand.prototype.executeServiceMethod = function () {\r\n        //since services will always be injected by the IOC container always user the interface type\r\n        return this.service.testRequestUsingIncludedAPI('localRequest', this);\r\n    };\r\n    SampleCommand.prototype.parseResponse = function (result) {\r\n        //since serilization objects will always be injected by the IOC container always user the interface type\r\n        return this.parser.parse(result); //use this.parser.parse to deserialize results. You'll of course need to implement the parser, our tests just use a generic function that returns the result\r\n        //most commands would also receive a model injection and the command would update it here\r\n    };\r\n    SampleCommand.prototype.getFaultString = function () {\r\n        return 'Lotus.SampleCommand a service request error occured';\r\n    };\r\n    SampleCommand.prototype.getErrorMessage = function () {\r\n        return 'Lotus.SampleCommand an execution error occured ';\r\n    };\r\n    SampleCommand.prototype.getExecErrorString = function () {\r\n        return 'Lotus.SampleCommand the following are required: ';\r\n    };\r\n    return SampleCommand;\r\n}(AbstractCommand_1.AbstractCommand));\r\nexports.SampleCommand = SampleCommand;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar SerializeFactory = /** @class */ (function () {\r\n    function SerializeFactory() {\r\n        if (SerializeFactory.INSTANCE != null) {\r\n            throw ('SerializeFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    SerializeFactory.getInstance = function () {\r\n        if (SerializeFactory.INSTANCE == null) {\r\n            SerializeFactory.INSTANCE = new SerializeFactory();\r\n        }\r\n        return SerializeFactory.INSTANCE;\r\n    };\r\n    /*\r\n     * Stub for override, this method is just an example of how this factory can be used\r\n     * */\r\n    SerializeFactory.prototype.getServiceResultParser = function (parserCode) {\r\n        var parser;\r\n        switch (parserCode) {\r\n            case 'local':\r\n            case 'remote':\r\n            default:\r\n                parser = {};\r\n                break;\r\n        }\r\n        return parser;\r\n    };\r\n    /*\r\n     * Stub for override, this method is just an example of how this factory can be used\r\n     * */\r\n    SerializeFactory.prototype.getServiceExporter = function (exporterCode) {\r\n        var exporter;\r\n        //we resuse parserCode which should really probably be called serializationCode\r\n        switch (exporterCode) {\r\n            case 'local':\r\n            case 'remote':\r\n            default:\r\n                exporter = {};\r\n                break;\r\n        }\r\n        return exporter;\r\n    };\r\n    SerializeFactory.INSTANCE = null;\r\n    return SerializeFactory;\r\n}());\r\nexports.SerializeFactory = SerializeFactory;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SampleService_1 = __webpack_require__(9);\r\n/**\r\n * Created by dsmiley on 7/27/17.\r\n */\r\nvar ServiceFactory = /** @class */ (function () {\r\n    function ServiceFactory() {\r\n        if (ServiceFactory.INSTANCE != null) {\r\n            throw ('ServiceFactory.INSTANCE: Singleton class has already been instantiated');\r\n        }\r\n        else {\r\n            //perform any required object set up\r\n        }\r\n    }\r\n    ServiceFactory.getInstance = function () {\r\n        if (ServiceFactory.INSTANCE == null) {\r\n            ServiceFactory.INSTANCE = new ServiceFactory();\r\n        }\r\n        return ServiceFactory.INSTANCE;\r\n    };\r\n    ServiceFactory.prototype.getService = function (config) {\r\n        var service;\r\n        switch (config.serviceCode) {\r\n            default:\r\n                service = new SampleService_1.SampleService(config);\r\n        }\r\n        return service;\r\n    };\r\n    ServiceFactory.INSTANCE = null;\r\n    return ServiceFactory;\r\n}());\r\nexports.ServiceFactory = ServiceFactory;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractMediator_1 = __webpack_require__(1);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar ButtonMediator = /** @class */ (function (_super) {\r\n    __extends(ButtonMediator, _super);\r\n    function ButtonMediator(componentInstance, context) {\r\n        var _this = this;\r\n        console.log('ButtonMediator constructor called');\r\n        _this = _super.call(this, componentInstance, context) || this;\r\n        return _this;\r\n    }\r\n    ButtonMediator.prototype.onClick = function (event) {\r\n        console.log('Im the button mediator, I can handle the component click and dispatch an application event.');\r\n    };\r\n    ButtonMediator.prototype.addEventListeners = function () {\r\n        _super.prototype.addEventListeners.call(this);\r\n        this.componentInstance.addEventListener('click', this, 'onClick');\r\n    };\r\n    ButtonMediator.prototype.removeEventListeners = function () {\r\n        _super.prototype.removeEventListeners.call(this);\r\n        this.componentInstance.removeEventListener('click', this, 'onClick');\r\n    };\r\n    ButtonMediator.prototype.toString = function () {\r\n        return 'Lotus.ButtonMediator';\r\n    };\r\n    return ButtonMediator;\r\n}(AbstractMediator_1.AbstractMediator));\r\nexports.ButtonMediator = ButtonMediator;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractMediator_1 = __webpack_require__(1);\r\n/**\r\n * Created by dsmiley on 7/26/17.\r\n */\r\nvar ListMediator = /** @class */ (function (_super) {\r\n    __extends(ListMediator, _super);\r\n    function ListMediator(componentInstance, context) {\r\n        return _super.call(this, componentInstance, context) || this;\r\n    }\r\n    ListMediator.prototype.toString = function () {\r\n        return 'Lotus.ListMediator';\r\n    };\r\n    return ListMediator;\r\n}(AbstractMediator_1.AbstractMediator));\r\nexports.ListMediator = ListMediator;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Created by dsmiley on 8/30/17.\r\n */\r\n__webpack_require__(22);\r\nfunction inject(target, key) {\r\n    //set target[key] equal to a new instance of the mapped constructor of target's type\r\n    var t = Reflect.getMetadata('design:type', target, key);\r\n    if (!t) {\r\n        // Needed to support react native inheritance\r\n        t = Reflect.getMetadata('design:type', target.constructor, key);\r\n    }\r\n    if (!target['resolveInjections']) {\r\n        target['resolveInjections'] = new Array();\r\n    }\r\n    target['resolveInjections'].push({ property: key, type: t });\r\n    //console.log('key: ' + key);\r\n    //console.log('t.name: ' + t.name);\r\n    //console.log('target.constructor.name: ' + target.constructor.name);\r\n    //console.log('target.constructor.prototype: ' + target.constructor.prototype);\r\n}\r\nexports.inject = inject;\r\nfunction injectable(target) {\r\n    // the new constructor behaviour\r\n    var f = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Object.getPrototypeOf(this.constructor.prototype).constructor.apply(this, args);\r\n        console.log(\"injectable constructor called, attempting to resolve injections: \" + this.constructor.prototype);\r\n        if (this.resolveInjections) {\r\n            console.log(\"injections found!!!!: \");\r\n            //TODO: move this method to a decorator that sets up this.resolveInjections as an accessor and adds this functionality to the constructor\r\n            this.resolveInjections.forEach(function (value, index) {\r\n                var instance = this.context.injector.inject(value.type);\r\n                if (instance) {\r\n                    this[value.property] = instance;\r\n                }\r\n            }.bind(this));\r\n        }\r\n        return this;\r\n    };\r\n    // copy prototype so intanceof operator still works\r\n    f.prototype = target.prototype;\r\n    return f;\r\n}\r\nexports.injectable = injectable;\r\nfunction bindable(target, key) {\r\n    console.log('bindable decorator called');\r\n    // property value\r\n    var _val = target[key];\r\n    if (!target['notify']) {\r\n        console.log('notify is undefined. please extend Lavender.Subject.');\r\n        return;\r\n    }\r\n    // property getter\r\n    var getter = function () {\r\n        console.log('Get: ${key} => ${returnValue}');\r\n        return this['_' + key];\r\n    };\r\n    // property setter\r\n    var setter = function (newVal) {\r\n        console.log('Set: ${key} => ${newVal}');\r\n        this['_' + key] = newVal;\r\n        this['notify'](newVal, key);\r\n    };\r\n    // Delete property.\r\n    if (delete target[key]) {\r\n        //define the private property:\r\n        target['_' + key] = _val;\r\n        // Create new property with getter and setter\r\n        Object.defineProperty(target, key, {\r\n            get: getter,\r\n            set: setter,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\nexports.bindable = bindable;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(4));\r\n__export(__webpack_require__(3));\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(12));\r\n__export(__webpack_require__(13));\r\n__export(__webpack_require__(19));\r\n__export(__webpack_require__(10));\r\n__export(__webpack_require__(15));\r\n__export(__webpack_require__(11));\r\n__export(__webpack_require__(16));\r\n__export(__webpack_require__(9));\r\n__export(__webpack_require__(8));\r\n__export(__webpack_require__(7));\r\n__export(__webpack_require__(6));\r\n__export(__webpack_require__(14));\r\n__export(__webpack_require__(1));\r\n__export(__webpack_require__(17));\r\n__export(__webpack_require__(18));\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        HashMap.create = supportsCreate\r\n            ? function () { return MakeDictionary(Object.create(null)); }\r\n            : supportsProto\r\n                ? function () { return MakeDictionary({ __proto__: null }); }\r\n                : function () { return MakeDictionary({}); };\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, propertyKey, attributes) {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                throw new TypeError();\r\n            if (IsNull(attributes))\r\n                attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var keys = [];\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        var k = 0;\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            var nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument) {\r\n        switch (Type(argument)) {\r\n            case 3 /* String */: return true;\r\n            case 4 /* Symbol */: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = HashMap.create();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21), __webpack_require__(23)))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lotusjs-mvw-UMD.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 78136b62bdb18f30b06e","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Lavender\"\n// module id = 0\n// module chunks = 0 1","import {IMediator} from \"./IMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {injectable} from \"../reflection/InjectorDecorator\";\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport abstract class AbstractMediator extends Lavender.Subject implements IMediator{\n    private _id:string;\n    private _componentInstance:Lotus.IComponent;\n    private _context:Lotus.IContext;\n\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        super();\n        this.id = Lavender.UuidUtils.generateUUID();\n        this.componentInstance = componentInstance;\n        this.context = context;\n        if(!this.componentInstance.ready){\n            this.componentInstance.addEventListener(Lotus.ComponentEvent.READY, this, 'init');\n        }else{\n            this.init();\n        }\n    }\n\n\n    get id():string {\n        return this._id;\n    }\n\n    set id(value:string) {\n        this._id = value;\n        this.notify(value, 'id');\n    }\n\n    get componentInstance():Lotus.IComponent {\n        return this._componentInstance;\n    }\n\n    set componentInstance(value:Lotus.IComponent) {\n        this._componentInstance = value;\n        this.notify(value, 'componentInstance');\n    }\n\n    get context():Lotus.IContext {\n        return this._context;\n    }\n\n    set context(value:Lotus.IContext) {\n        this._context = value;\n        this.notify(value, 'context');\n    }\n\n    protected addEventListeners():void{\n\n    }\n\n    protected removeEventListeners():void{\n        if(this.componentInstance.canListen(Lotus.ComponentEvent.READY, this, 'init')){\n            this.componentInstance.removeEventListener(Lotus.ComponentEvent.READY, this, 'init');\n        }\n    }\n\n    protected setUpBindings():void{\n\n    }\n\n    protected removeBindings():void{\n        this.binder.unbindAll();\n    }\n\n    public toString():string{\n        return this.id;\n    }\n\n    public init():void{\n        this.addEventListeners();\n        this.setUpBindings();\n    }\n\n    public destroy():void{\n        this.removeEventListeners();\n        this.removeBindings();\n        this.id = null;\n        this.componentInstance = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/AbstractMediator.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Lotus\"\n// module id = 2\n// module chunks = 0 1","/**\n * Created by dsmiley on 7/24/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {ICommandMap} from \"./ICommandMap\";\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class CommandMap implements ICommandMap{\n    public eventFunctionMap:Object;\n    public instanceMap:Object;\n    public context:Lotus.IContext;\n\n    constructor(context:Lotus.IContext){\n        //Note: this could be improved by creating read only accessor methods for instanceMap and eventFunctionMap\n        this.eventFunctionMap = {};\n        this.instanceMap = {};\n        this.context = context;\n    }\n\n    public addCommand(eventType:string, handler:any, functionName:string='execute', useSingleton:boolean=false):void{\n        if( this.eventFunctionMap[eventType] === null || this.eventFunctionMap[eventType] === undefined ){\n            this.eventFunctionMap[eventType] = [];\n        }\n\n        if( this.hasCommandMap( eventType, handler, functionName ) ){\n            return;//don't add the handler/function twice\n        }\n\n        this.eventFunctionMap[eventType].push({eventType:eventType, handler:handler, functionName:functionName, useSingleton:useSingleton});\n\n        if( useSingleton ){\n            if( this.instanceMap[eventType] === null ||  this.instanceMap[eventType] === undefined ){\n                this.instanceMap[eventType] = {};\n            }\n            if( this.instanceMap[eventType][handler] === null ||  this.instanceMap[eventType][handler] === undefined ){\n                this.instanceMap[eventType][handler] = new handler(this.context);\n            }\n        }\n        if( !this.context.eventDispatcher.canListen(eventType, this, 'routeEventToCommand') ){\n            this.context.eventDispatcher.addEventListener(eventType, this, 'routeEventToCommand');\n        }\n    }\n\n    public hasCommandMap(eventType:string, handler:Object, functionName:string):boolean{\n        let hasCommand = false;\n        if( this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined ){\n            let mapArray = this.eventFunctionMap[eventType];\n            for( let itemIndex = 0; itemIndex < mapArray.length; itemIndex++){\n                let item = mapArray[ itemIndex ];\n                if( item.handler == handler && item.functionName == functionName ){\n                    hasCommand = true;\n                    break;\n                }\n            }\n        }\n        return hasCommand;\n    }\n\n    public removeCommand(eventType:string, handler:Object):void{\n        if( this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined ){\n            let mapArray = this.eventFunctionMap[eventType];\n            for( let itemIndex = mapArray.length - 1; itemIndex >= 0; itemIndex--){\n                let item = mapArray[ itemIndex ];\n                if( item.handler == handler ){\n                    //remove the item form the array\n                    switch (itemIndex) {\n                        case 0:\n                            mapArray.shift();\n                            break;\n                        case mapArray.length - 1:\n                            mapArray.pop();\n                            break;\n                        default:\n                            let head = mapArray.slice(0, itemIndex);\n                            let tail = mapArray.slice(itemIndex + 1);\n                            mapArray = head.concat(tail);\n                            break;\n                    }\n                }\n            }\n            if( this.eventFunctionMap[eventType].length <= 0 ){\n                this.context.eventDispatcher.removeEventListener(eventType, this, 'routeEventToCommand');\n                delete this.eventFunctionMap[eventType];\n            }\n        }\n    }\n\n    public removeAllCommands():void{\n        this.eventFunctionMap = {};\n        this.instanceMap = {};\n        this.context.eventDispatcher.removeAllEventListeners(this);\n    }\n\n    public routeEventToCommand(event:Lavender.IEvent):void{\n        if( this.eventFunctionMap[event.type] !== null && this.eventFunctionMap[event.type] !== undefined ){\n            let mapArray = this.eventFunctionMap[event.type];\n            for( let itemIndex = 0; itemIndex < mapArray.length; itemIndex++){\n                let item = mapArray[ itemIndex ];\n                if( item.useSingleton ){\n                    this.instanceMap[item.event.type][item.handler][item.functionName]();\n                }else{\n                    let instance;\n                    if( typeof item.handler === 'object' ){\n                        instance = item.handler;\n                    }else{\n                        //IMPORTANT: only constructor function will get the context! This is by design as it's assumed preconstructed objects have all required dependencies\n                        instance = new item.handler(this.context);\n                    }\n                    instance[item.functionName](event);\n                }\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/CommandMap.ts","/**\n * Created by dsmiley on 7/24/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IInjector} from './IInjector';\n\nexport class Injector implements IInjector{\n    public context:Lotus.IContext;\n    public objectMap:Object;\n    public typeMap:Array<Object> = [];\n\n    constructor(context:Lotus.IContext){\n        this.context = context;\n        this.objectMap = {};\n    }\n\n    public mapObject(key:any, constructor:Function, useSingleton:boolean=false):void{\n        if(typeof key == 'function'){\n            var mapIndex = -1;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.constructor == constructor){\n                    mapIndex = index;\n                    return false;\n                }\n            });\n            //TODO:refactror to overrite index\n            if(mapIndex < 0){\n                this.typeMap.push({constructor:constructor, useSingleton:useSingleton, instance:null, type:key});\n            }\n        }else{\n            //instantiate singleton instance upon request is more efficient\n            this.objectMap[key] = {constructor:constructor, useSingleton:useSingleton, instance:null};\n        }\n    }\n\n    public mapSingletonInstance(key:any, instance:any):void{\n        if(typeof key == 'function'){\n            var mapIndex = -1;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.instance == instance){\n                    mapIndex = index;\n                    return false;\n                }\n            });\n            //TODO:refactror to overrite index\n            if(mapIndex < 0){\n                this.typeMap.push({constructor: null, useSingleton: true, instance: instance});\n            }\n        }else {\n            //map injector as sigleton using the supplied instance\n            //this method is very useful for mapping objects that are themselves singletons and may have already been constructed\n            //prime example is the model wich generally is constructed before injections are defined\n            this.objectMap[key] = {constructor: null, useSingleton: true, instance: instance};\n        }\n    }\n\n    public inject(key:any):Object{\n        if(typeof key == 'function'){\n            var map:Object;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.type == key || value.instance instanceof key){\n                    map = value;\n                    return false;\n                }\n            });\n            if(map){\n                if( map['useSingleton'] ){\n                    if( map['instance'] === null ){\n                        map['instance'] = new (map.constructor as FunctionConstructor)();\n                    }\n                    return map['instance'];\n                }else{\n                    return new (map.constructor as FunctionConstructor)();\n                }\n            }\n        }else{\n            if( this.objectMap[key] !== null && this.objectMap[key] !== undefined ){\n                if( this.objectMap[key].useSingleton ){\n                    if( this.objectMap[key].instance === null ){\n                        this.objectMap[key].instance = new this.objectMap[key].constructor();\n                    }\n                    return this.objectMap[key].instance;\n                }else{\n                    return new this.objectMap[key].constructor();\n                }\n            }\n        }\n        throw new Error('Lotus.Injector.prototype.getObject: could not find object for key: ' + key);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/Injector.ts","import {IMediatorMap} from \"./IMediatorMap\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {IMediator} from \"../mediators/IMediator\";\n\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport class MediatorMap implements IMediatorMap{\n    protected _tagConstructorMap:Object;\n    protected _mediatorInstanceMap:Object;\n    public context:Lotus.IContext;\n\n    constructor(context:Lotus.IContext){\n        //Note: this could be improved by creating read only accessor methods for tagMap and eventFunctionMap\n        this._tagConstructorMap = {};\n        this._mediatorInstanceMap = {};\n        this.context = context;\n    }\n    \n    get tagConstructorMap():Object{\n        return this._tagConstructorMap;\n    }\n\n    get mediatorInstanceMap():Object{\n        return this._mediatorInstanceMap;\n    }\n\n    public add(tagName:string, mediatorConstructor:Function, useSingleton:boolean=false){\n        if( this.hasMediatorMap( tagName, mediatorConstructor ) ){\n            return;//don't add the mediatorConstructor/function twice\n        }\n        this.tagConstructorMap[tagName] = {useSingleton:useSingleton, constructor:mediatorConstructor, id:Lavender.UuidUtils.generateUUID(), name:mediatorConstructor.toString()};\n    }\n\n    public remove(tagName:string, mediatorConstructor:Function):string{\n        if( !this.hasMediatorMap( tagName, mediatorConstructor ) ){\n            return;//don't add the mediatorConstructor/function twice\n        }\n\n        let mapId = this.tagConstructorMap[tagName].id;\n\n        this.tagConstructorMap[tagName] = null;\n        delete this.tagConstructorMap[tagName];\n\n        if(this._mediatorInstanceMap[mapId] === null ||  this._mediatorInstanceMap[mapId] === undefined){\n            return;//mo mediators were applied to this mapping\n        }\n        //iterate in reverse over all instance and destroy\n        for( let i=0; i < (this._mediatorInstanceMap[mapId] as Array<IMediator>).length ; i++){\n            this._mediatorInstanceMap[mapId][i].destroy();\n        }\n        //make the array eligible for garbage collection\n        this._mediatorInstanceMap[mapId] = null;\n        delete this._mediatorInstanceMap[mapId];\n\n        return mapId;//return mapId to help enable better tests\n    }\n\n    public apply(tagName:string, componentInstance:Lotus.IComponent):void{\n        let map = this.tagConstructorMap[tagName];\n\n        if(!map){\n            return;//no mediator found for this tag\n        }\n\n        if(this._mediatorInstanceMap[map.id] === null ||  this._mediatorInstanceMap[map.id] === undefined){\n            this._mediatorInstanceMap[map.id] = [];\n        }\n\n        if( map.useSingleton ){\n            if( (this._mediatorInstanceMap[map.id] as Array<IMediator>).length == 0 ){\n                (this._mediatorInstanceMap[map.id] as Array<IMediator>).push( new map.constructor(componentInstance, this.context) );\n            }\n        }else{\n            (this._mediatorInstanceMap[map.id] as Array<IMediator>).push( new map.constructor(componentInstance, this.context) );\n        }\n    }\n\n    public hasMediatorMap(tagName:string, mediatorConstructor:Function):boolean{\n        return (this.tagConstructorMap.hasOwnProperty(tagName) && this.tagConstructorMap[tagName].name == mediatorConstructor.toString())\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/MediatorMap.ts","import {ICommand} from \"./ICommand\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {ActionSuccessEvent} from '../events/ActionSuccessEvent';\nimport {ActionErrorEvent} from '../events/ActionErrorEvent';\nimport {IService} from \"../service/IService\";\nimport {IContext} from \"../../context/IContext\";\n/**\n * Created by dsmiley on 7/28/17.\n */\nexport abstract class AbstractCommand extends Lavender.EventDispatcher implements ICommand{\n    protected service:IService;\n    protected opModel:Lavender.AsyncOperationModel;\n    protected parser:Lavender.IParser;\n    protected errorModel:Lavender.ErrorModel;\n    public context:IContext;\n\n\n    constructor(context:IContext){\n        super();\n        this.context = context;\n        this.service = context.injector.inject('service') as IService;\n        this.parser = context.injector.inject('parser') as Lavender.IParser;\n        this.opModel = context.injector.inject('opModel') as Lavender.AsyncOperationModel;\n        this.errorModel = context.injector.inject('errorModel') as Lavender.ErrorModel;\n    }\n    \n    public execute(event:Lavender.IEvent):string{\n        if (this.service === null || this.service === undefined || this.opModel === null || this.opModel === undefined || this.parser === null || this.parser === undefined) {\n            this.executionError();\n        }\n        this.opModel.asyncOperationComplete = false;\n        this.opModel.asyncOperationCount += 1;\n        return this.executeServiceMethod();\n    }\n\n    //method must return a requestID\n    //Override this method in subclasses\n    protected executeServiceMethod():string{\n        return null;\n    }\n\n    //Override this method in subclasses\n    //it should parse the result and return the resulting Object tree\n    protected parseResponse(result:Lavender.IResult):Object{\n        return null;\n    }\n\n    protected dispatchSuccess(parsedResult:Object):void{\n        let doneEvent = new ActionSuccessEvent(ActionSuccessEvent.SUCCESS,{result:parsedResult});\n        this.dispatch(doneEvent);\n    }\n\n    public success(result:Lavender.IResult):void{\n        try {\n            //result is instance of Lavender.HttpSuccess\n            let parsedResult = this.parseResponse(result);\n            this.dispatchSuccess(parsedResult);\n        } catch (e) {\n            let errorMessage = this.getErrorMessage() + \"\\n\" + e.message + \"\\n\" + e.stack;\n            let errorEvent = new ActionErrorEvent(ActionErrorEvent.ERROR, {message:errorMessage});\n            this.dispatch(errorEvent);\n            let error = {name: 'error', message: errorMessage};\n            this.errorModel.errors.addItem(error);\n            this.errorModel.appError = true;\n        } finally {\n            this.opModel.asyncOperationCount -= 1;\n            if (this.opModel.asyncOperationCount == 0) {\n                this.opModel.asyncOperationComplete = true;\n            }\n            this.destroy();\n        }\n    }\n\n    public fault(fault:Lavender.IFault):void{\n        //fault is an instance of Lavender.HttpFault\n        this.opModel.asyncOperationCount -= 1;\n        if (this.opModel.asyncOperationCount == 0) {\n            this.opModel.asyncOperationComplete = true;\n        }\n        let errorMessage = this.getFaultString() + fault.message;\n        let errorEvent = new ActionErrorEvent(ActionErrorEvent.ERROR, {message:errorMessage});\n        this.dispatch(errorEvent);\n        let error = {name: fault.status, message: errorMessage};\n        this.errorModel.errors.addItem(error);\n        this.errorModel.appError = true;\n        this.destroy();\n    }\n\n    //Override this method in subclasses\n    public onProgress(progress:number):void{\n\n    }\n\n    //Override this method in subclasses\n    protected getFaultString():string{\n        return null;\n    }\n\n    //Override this method in subclasses\n    protected getErrorMessage():string{\n        return null;\n    }\n\n    protected executionError():void{\n        // These properties weren't injected or supplied in the constructor or manually.\n        // They are needed so we throw an error.\n        let msg = this.getExecErrorString();\n        if (this.service === null || this.service === undefined) {\n            msg += \" service\";\n        }\n        if (this.opModel === null || this.opModel) {\n            msg += \", opModel\";\n        }\n        if (this.parser === null || this.parser === undefined) {\n            msg += \", parser\";\n        }\n\n        msg += \".\";\n\n        throw new Error(msg);\n    }\n\n    //Override this method in subclasses\n    protected getExecErrorString():string{\n        return 'Lavender.AbstractServiceAction.prototype.executionError: the following are required: ';\n    }\n\n    public destroy():void{\n        if( this.canListen(ActionErrorEvent.ERROR, this, 'onError') ){\n            this.removeEventListener(ActionErrorEvent.ERROR, this, 'onError');\n        }\n        if( this.canListen(ActionSuccessEvent.SUCCESS, this, 'onSuccess') ){\n            this.removeEventListener(ActionSuccessEvent.SUCCESS, this, 'onSuccess');\n        }\n        this.context = null;\n        this.opModel = null;\n        this.service = null;\n        this.parser = null;\n        this.errorModel = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/command/AbstractCommand.ts","/**\n * Created by dsmiley on 5/18/17.\n */\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class ActionErrorEvent extends Lavender.AbstractEvent{\n    constructor(type:string, payload?:Object){\n        super(type, payload);\n\n        if( !payload || (payload as any).message === null || (payload as any).message === undefined ){\n            throw new Error('Lavender.ActionErrorEvent: payload.message is required');\n        }\n    }\n\n    public static ERROR:string = 'actionError';\n\n    clone(type:string, payload:Object):Lavender.IEvent{\n        return new ActionErrorEvent(this.type, this.payload)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/events/ActionErrorEvent.ts","/**\n * Created by dsmiley on 5/18/17.\n */\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class ActionSuccessEvent extends Lavender.AbstractEvent{\n    constructor(type:string, payload?:Object){\n        super(type, payload);\n\n        if( payload === null || payload === undefined ){\n            throw new Error('Lavender.ActionSuccessEvent: payload is required');\n        }\n    }\n\n    public static SUCCESS:string = 'actionSuccess';\n\n    clone(type:string, payload:Object):Lavender.IEvent{\n        return new ActionSuccessEvent(this.type, this.payload)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/control/events/ActionSuccessEvent.ts","import {IService} from \"./IService\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {HttpServiceFactory} from '../../factory/HttpServiceFactory'\n/**\n * Created by dsmiley on 7/27/17.\n * This is a sample asynchronous action used in unit tests. It can be used as a template though for all asynch actions\n */\nexport class SampleService extends Lavender.AbstractHttpService implements IService{\n    public config:Lavender.Config;\n    public serviceMap:Object;\n\n    constructor(config:Lavender.Config){\n        super();\n        this.config = config;\n        this.serviceMap = (config.hasOwnProperty('serviceMap')) ? config['serviceMap'] :\n        {\n            'echoJSON'\t\t\t\t    : ':3000/echoJSON/key/{0}',\n            'localRequest'\t\t\t\t: ':3000/printondemand/1234/photos/{0}'\n        };\n    }\n    \n    protected getURLWithParams(key:string, args:Array<string>):string{\n        return (args !== null && args !== undefined ) ? Lavender.StringUtil.substitute(this.getURL(key), args) : this.getURL(key);\n    }\n\n    protected getURL(key:string):string{\n        return this.config.baseUrl + this.serviceMap[key];\n    }\n\n    public echoJSON(jsonKey:string, key:string, responder:Lavender.IResponder, paramObj:Object={}, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        //this is a sample service method to be used as an example only. You service methods will be dependent on your service API and model objects\n        //note the use of the key param. This is a very importnat feature and I highly recommend that whatever service you created implements a similar method\n        //don't hard code or otherwise tightly couple the URL creation inside this method. The use of a builder pattern ensures the end point can be changed based on environment\n        var url = this.getURLWithParams(key, [jsonKey]);\n        return this.sendRequest(true, responder, url, paramObj, format, contentType, cache);\n    }\n\n    public testRequestUsingIncludedAPI(key:string, responder:Lavender.IResponder, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        var url = this.getURLWithParams(key, ['54232fc2-7345-4921-8079']);//hard coded args\n        return this.sendRequest(false, responder, url, null, format, contentType, cache);\n    }\n\n    public sendRequest(isPostRequest:boolean, responder:Lavender.IResponder, url:string, paramObj:Object={}, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        var params = JSON.stringify(paramObj);\n\n        if( cache === null || cache === undefined ){\n            cache = false;\n        }\n\n        var httpRequestInstance:Lavender.IHttpService = HttpServiceFactory.getInstance().getHttpService(this.config.serviceCode);\n        httpRequestInstance.addResponder(responder);\n        var requestType = (isPostRequest) ? 'POST' : 'GET';\n        return httpRequestInstance.send(requestType, url, params, contentType, format, cache);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/service/SampleService.ts","import {IEventDispatcherFactory} from \"./IEventDispatcherFactory\";\nimport * as Lavender from 'lavenderjs/lib';\n\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class EventDispatcherFactory implements IEventDispatcherFactory{\n    private static INSTANCE:IEventDispatcherFactory = null;\n\n    constructor(){\n        if (EventDispatcherFactory.INSTANCE != null ) {\n            throw( 'EventDispatcherFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IEventDispatcherFactory{\n        if (EventDispatcherFactory.INSTANCE == null) {\n            EventDispatcherFactory.INSTANCE = new EventDispatcherFactory();\n        }\n        return EventDispatcherFactory.INSTANCE;\n    }\n\n    public getEventDispatcher(eventDispatcherCode:string='Lavender.EventDispatcher'):Lavender.IEventDispatcher{\n        let dispatcher;\n        //config.daoCode defaults to jquery\n        switch( eventDispatcherCode ){\n            case \"Lavender.EventDispatcher\":\n            default:\n                dispatcher = new Lavender.EventDispatcher();\n        }\n        return dispatcher;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/EventDispatcherFactory.ts","import {IHttpServiceFactory} from \"./IHttpServiceFactory\";\nimport * as Lavender from 'lavenderjs/lib';\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class HttpServiceFactory implements IHttpServiceFactory{\n    private static INSTANCE:IHttpServiceFactory = null;\n\n    constructor(){\n        if (HttpServiceFactory.INSTANCE != null ) {\n            throw( 'HttpServiceFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IHttpServiceFactory{\n        if (HttpServiceFactory.INSTANCE == null) {\n            HttpServiceFactory.INSTANCE = new HttpServiceFactory();\n        }\n        return HttpServiceFactory.INSTANCE;\n    }\n\n    //override this method to return custon IService implementations\n    public getHttpService(code:string='Lavender.XhrHttpService'):Lavender.IHttpService{\n        let httpService;\n        switch(code){\n            case \"Lavender.XhrHttpService\":\n            default:\n                httpService = new Lavender.XhrHttpService();\n                break;\n        }\n        return httpService;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/HttpServiceFactory.ts","/**\n * Created by dsmiley on 9/20/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IContext} from \"./IContext\";\n\nexport class ComponentMap extends Lotus.ComponentMap{\n    constructor(context:IContext){\n        super(context);\n    }\n\n    protected mapMediators(tagInstance:Lotus.LotusHTMLElement):void{\n        (this.context as IContext).mediatorMap.apply(tagInstance.tagName.toLowerCase(), tagInstance.lotusComponentInstance);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/ComponentMap.ts","/**\n * Created by dsmiley on 9/20/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IMediatorMap} from \"./IMediatorMap\";\nimport {IInjector} from \"./IInjector\";\nimport {ICommandMap} from \"./ICommandMap\";\nimport {CommandMap} from \"./CommandMap\";\nimport {Injector} from \"./Injector\";\nimport {MediatorMap} from \"./MediatorMap\";\nimport {EventDispatcherFactory} from \"../factory/EventDispatcherFactory\";\n\nexport class Context extends Lotus.Context{\n    public commandMap:ICommandMap;\n    public injector:IInjector\n    public mediatorMap:IMediatorMap;\n\n    constructor(config:Object, params:Object){\n        super(config, params)\n        //IMPORTANT: must occur first so application event bus is configured\n        this.eventDispatcher = EventDispatcherFactory.getInstance().getEventDispatcher();\n        this.commandMap = new CommandMap(this);//create factory if we require sub classes one day\n        this.injector = new Injector(this);//create factory if we require sub classes one day\n        this.mediatorMap = new MediatorMap(this);\n        this.startUp();\n    }\n\n    public startUp(){\n        super.startUp();\n        this.mapCommands();\n        this.mapObjects();\n        this.mapMediators();\n    }\n\n    public mapCommands(){\n\n    }\n\n    public mapObjects(){\n\n    }\n\n    public mapMediators(){\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/Context.ts","import {AbstractCommand} from \"./AbstractCommand\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {ISampleService} from \"../service/ISampleService\";\nimport {IContext} from \"../../context/IContext\";\n\n/**\n * Created by dsmiley on 7/28/17.\n */\nexport class SampleCommand extends AbstractCommand{\n\n    protected model:Object;//you should implement a concrete model implementation in your projects\n\n    constructor(context:IContext){\n        super(context);\n    }\n\n    protected executeServiceMethod():string{\n        //since services will always be injected by the IOC container always user the interface type\n        return (this.service as ISampleService).testRequestUsingIncludedAPI('localRequest', this);\n    }\n\n    protected parseResponse(result:Lavender.IResult):Object{\n        //since serilization objects will always be injected by the IOC container always user the interface type\n        return this.parser.parse(result);//use this.parser.parse to deserialize results. You'll of course need to implement the parser, our tests just use a generic function that returns the result\n        //most commands would also receive a model injection and the command would update it here\n    }\n\n    protected getFaultString():string{\n        return 'Lotus.SampleCommand a service request error occured';\n    }\n\n    protected getErrorMessage():string{\n        return 'Lotus.SampleCommand an execution error occured ';\n    }\n\n    protected getExecErrorString():string{\n        return 'Lotus.SampleCommand the following are required: ';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/command/SampleCommand.ts","import {ISerializeFactory} from \"./ISerializeFactory\";\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class SerializeFactory implements ISerializeFactory{\n    private static INSTANCE:ISerializeFactory = null;\n\n    constructor(){\n        if (SerializeFactory.INSTANCE != null ) {\n            throw( 'SerializeFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():ISerializeFactory{\n        if (SerializeFactory.INSTANCE == null) {\n            SerializeFactory.INSTANCE = new SerializeFactory();\n        }\n        return SerializeFactory.INSTANCE;\n    }\n\n    /*\n     * Stub for override, this method is just an example of how this factory can be used\n     * */\n    public getServiceResultParser(parserCode:string):Object{\n        let parser;\n        switch( parserCode ){\n            case 'local':\n            case 'remote':\n            default:\n                parser = {};\n                break;\n        }\n        return parser;\n    }\n\n    /*\n     * Stub for override, this method is just an example of how this factory can be used\n     * */\n    public getServiceExporter(exporterCode:string):Object{\n        let exporter;\n        //we resuse parserCode which should really probably be called serializationCode\n        switch( exporterCode ){\n            case 'local':\n            case 'remote':\n            default:\n                exporter = {};\n                break;\n        }\n        return exporter;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/SerializeFactory.ts","import {IService} from \"../control/service/IService\";\nimport {IServiceFactory} from \"./IServiceFactory\";\nimport {SampleService} from \"../control/service/SampleService\";\nimport * as Lavender from 'lavenderjs/lib';\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class ServiceFactory implements IServiceFactory{\n    private static INSTANCE:IServiceFactory = null;\n\n    constructor(){\n        if (ServiceFactory.INSTANCE != null ) {\n            throw( 'ServiceFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IServiceFactory{\n        if (ServiceFactory.INSTANCE == null) {\n            ServiceFactory.INSTANCE = new ServiceFactory();\n        }\n        return ServiceFactory.INSTANCE;\n    }\n\n    public getService(config:Lavender.Config):IService{\n        var service;\n        switch( config.serviceCode ){\n            default:\n                service = new SampleService( config );\n        }\n        return service;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/ServiceFactory.ts","import {AbstractMediator} from \"./AbstractMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\n/**\n * Created by dsmiley on 7/26/17.\n */\n\nexport class ButtonMediator extends AbstractMediator{\n\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        console.log('ButtonMediator constructor called')\n        super(componentInstance,context);\n    }\n\n    protected onClick(event:Event):void{\n        console.log('Im the button mediator, I can handle the component click and dispatch an application event.');\n    }\n\n    protected addEventListeners():void{\n        super.addEventListeners();\n        this.componentInstance.addEventListener('click', this, 'onClick');\n    }\n\n    protected removeEventListeners():void{\n        super.removeEventListeners();\n        this.componentInstance.removeEventListener('click', this, 'onClick');\n    }\n\n    public toString():string{\n        return 'Lotus.ButtonMediator';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/ButtonMediator.ts","import {AbstractMediator} from \"./AbstractMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport class ListMediator extends AbstractMediator{\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        super(componentInstance,context);\n    }\n\n    public toString():string{\n        return 'Lotus.ListMediator';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/ListMediator.ts","/**\n * Created by dsmiley on 8/30/17.\n */\nimport 'reflect-metadata';\nimport * as Lavender from 'lavenderjs/lib';\n\nexport type injectionResolver = {property:string, type:Function};\n\nexport function inject(target:any, key:string){\n    //set target[key] equal to a new instance of the mapped constructor of target's type\n    let t = Reflect.getMetadata('design:type', target, key);\n    if (!t) {\n        // Needed to support react native inheritance\n        t = Reflect.getMetadata('design:type', target.constructor, key);\n    }\n    if(!target['resolveInjections']){\n        target['resolveInjections'] = new Array<injectionResolver>();\n    }\n    (target['resolveInjections'] as Array<injectionResolver>).push({property:key, type:t});\n    //console.log('key: ' + key);\n    //console.log('t.name: ' + t.name);\n    //console.log('target.constructor.name: ' + target.constructor.name);\n    //console.log('target.constructor.prototype: ' + target.constructor.prototype);\n}\n\nexport function injectable(target:any){\n    // the new constructor behaviour\n    var f : any = function (...args) {\n        Object.getPrototypeOf(this.constructor.prototype).constructor.apply(this, args);\n        console.log(\"injectable constructor called, attempting to resolve injections: \" + this.constructor.prototype);\n        if(this.resolveInjections){\n            console.log(\"injections found!!!!: \");\n            //TODO: move this method to a decorator that sets up this.resolveInjections as an accessor and adds this functionality to the constructor\n            this.resolveInjections.forEach(function(value:injectionResolver, index:number){\n                var instance:any = this.context.injector.inject(value.type);\n                if(instance){\n                    this[value.property] = instance;\n                }\n            }.bind(this));\n        }\n        return this;\n    }\n\n    // copy prototype so intanceof operator still works\n    f.prototype = target.prototype;\n\n    return f;\n}\n\nexport function bindable(target: any, key: string){\n    console.log('bindable decorator called');\n    // property value\n    var _val = target[key];\n\n    if(!target['notify']){\n        console.log('notify is undefined. please extend Lavender.Subject.');\n        return;\n    }\n\n    // property getter\n    var getter = function () {\n        console.log('Get: ${key} => ${returnValue}');\n        return this['_'+key];\n    };\n\n    // property setter\n    var setter = function (newVal) {\n        console.log('Set: ${key} => ${newVal}');\n        this['_'+key] = newVal;\n        this['notify']( newVal, key );\n    };\n\n    // Delete property.\n    if (delete target[key]) {\n        //define the private property:\n        target['_'+key] = _val;\n        // Create new property with getter and setter\n        Object.defineProperty(target, key, {\n            get: getter,\n            set: setter,\n            enumerable: true,\n            configurable: true\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/reflection/InjectorDecorator.ts","/**\n * Created by dsmiley on 7/24/17.\n */\nexport * from './context/IInjector';\nexport * from './context/Injector';\nexport * from './context/CommandMap';\nexport * from './context/IMediatorMap';\nexport * from './context/MediatorMap';\nexport * from './context/ComponentMap';\nexport * from './context/Context';\nexport * from './reflection/InjectorDecorator';\nexport * from './factory/IEventDispatcherFactory';\nexport * from './factory/EventDispatcherFactory';\nexport * from './factory/ISerializeFactory';\nexport * from './factory/SerializeFactory';\nexport * from './factory/IHttpServiceFactory';\nexport * from './factory/HttpServiceFactory';\nexport * from './factory/IServiceFactory';\nexport * from './factory/ServiceFactory';\nexport * from './control/service/IService';\nexport * from './control/service/SampleService';\nexport * from './control/service/ISampleService';\nexport * from './control/events/ActionSuccessEvent';\nexport * from './control/events/ActionErrorEvent';\nexport * from './control/command/AbstractCommand';\nexport * from './control/command/SampleCommand';\nexport * from './mediators/IMediator';\nexport * from './mediators/AbstractMediator';\nexport * from './mediators/ButtonMediator';\nexport * from './mediators/ListMediator';\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 21\n// module chunks = 0 1","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        HashMap.create = supportsCreate\r\n            ? function () { return MakeDictionary(Object.create(null)); }\r\n            : supportsProto\r\n                ? function () { return MakeDictionary({ __proto__: null }); }\r\n                : function () { return MakeDictionary({}); };\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, propertyKey, attributes) {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                throw new TypeError();\r\n            if (IsNull(attributes))\r\n                attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var keys = [];\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        var k = 0;\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            var nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument) {\r\n        switch (Type(argument)) {\r\n            case 3 /* String */: return true;\r\n            case 4 /* Symbol */: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = HashMap.create();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reflect-metadata/Reflect.js\n// module id = 22\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 23\n// module chunks = 0 1"],"sourceRoot":""}