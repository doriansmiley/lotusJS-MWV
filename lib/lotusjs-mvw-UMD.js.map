{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap eec135fcbac30f2271fa","webpack:///external \"Lavender\"","webpack:///./src/mediators/AbstractMediator.ts","webpack:///external \"Lotus\"","webpack:///./src/context/CommandMap.ts","webpack:///./src/context/ComponentMap.ts","webpack:///./src/context/Injector.ts","webpack:///./src/context/MediatorMap.ts","webpack:///./src/control/command/AbstractCommand.ts","webpack:///./src/control/events/ActionErrorEvent.ts","webpack:///./src/control/events/ActionSuccessEvent.ts","webpack:///./src/control/service/SampleService.ts","webpack:///./src/factory/EventDispatcherFactory.ts","webpack:///./src/factory/HttpServiceFactory.ts","webpack:///./src/context/Context.ts","webpack:///./src/control/command/SampleCommand.ts","webpack:///./src/factory/SerializeFactory.ts","webpack:///./src/factory/ServiceFactory.ts","webpack:///./src/mediators/ButtonMediator.ts","webpack:///./src/mediators/ListMediator.ts","webpack:///./src/reflection/InjectorDecorator.ts","webpack:///./src/index.ts","webpack:///./~/process/browser.js","webpack:///./~/reflect-metadata/Reflect.js","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":"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AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;ACvLtC;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,6BAA6B,gBAAgB,kBAAkB;AAC/D;AACA;AACA;AACA,2BAA2B,4CAA4C;AACvE;AACA,+BAA+B,wBAAwB,kBAAkB,EAAE;AAC3E,+BAA+B,yBAAyB,EAAE;AAC1D;AACA,mCAAmC,8BAA8B;AACjE,mCAAmC,mBAAmB;AACtD;AACA,mCAAmC,qDAAqD;AACxF,mCAAmC,iBAAiB;AACpD,KAAK,0BAA0B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmkCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,aAAa;AAC5E,iEAAiE,aAAa;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAA0B,EAAE;AAC9D;AACA;AACA,aAAa;AACb,gDAAgD,+CAA+C;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0DAA0D;AACxG,gDAAgD,4DAA4D;AAC5G,iDAAiD,4DAA4D;AAC7G,uDAAuD,uBAAuB;AAC9E,yDAAyD,uBAAuB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uBAAuB,EAAE;AAC3D;AACA;AACA,aAAa;AACb,kDAAkD,6BAA6B;AAC/E,kDAAkD,0CAA0C;AAC5F,qDAAqD,gCAAgC;AACrF,+CAA+C,mBAAmB;AAClE,8CAA8C,yBAAyB;AACvE,gDAAgD,2BAA2B;AAC3E,iDAAiD,4BAA4B;AAC7E,uDAAuD,oBAAoB;AAC3E,yDAAyD,oBAAoB;AAC7E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0BAA0B;AAClF;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC;AAClC,CAAC,0BAA0B;AAC3B,mC;;;;;;;ACpmCA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"lotusjs-mvw-UMD.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LotusMVW\", [\"Lavender\", \"Lotus\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LotusMVW\"] = factory(require(\"Lavender\"), require(\"Lotus\"));\n\telse\n\t\troot[\"LotusMVW\"] = factory(root[\"Lavender\"], root[\"Lotus\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eec135fcbac30f2271fa","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Lavender\"\n// module id = 0\n// module chunks = 0 1","import {IMediator} from \"./IMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {injectable} from \"../reflection/InjectorDecorator\";\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport abstract class AbstractMediator extends Lavender.Subject implements IMediator{\n    private _id:string;\n    private _componentInstance:Lotus.IComponent;\n    private _context:Lotus.IContext;\n\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        super();\n        this.id = Lavender.UuidUtils.generateUUID();\n        this.componentInstance = componentInstance;\n        this.context = context;\n        if(!this.componentInstance.ready){\n            this.componentInstance.addEventListener(Lotus.ComponentEvent.READY, this, 'init');\n        }else{\n            this.init();\n        }\n    }\n\n\n    get id():string {\n        return this._id;\n    }\n\n    set id(value:string) {\n        this._id = value;\n        this.notify(value, 'id');\n    }\n\n    get componentInstance():Lotus.IComponent {\n        return this._componentInstance;\n    }\n\n    set componentInstance(value:Lotus.IComponent) {\n        this._componentInstance = value;\n        this.notify(value, 'componentInstance');\n    }\n\n    get context():Lotus.IContext {\n        return this._context;\n    }\n\n    set context(value:Lotus.IContext) {\n        this._context = value;\n        this.notify(value, 'context');\n    }\n\n    protected addEventListeners():void{\n\n    }\n\n    protected removeEventListeners():void{\n        if(this.componentInstance.canListen(Lotus.ComponentEvent.READY, this, 'init')){\n            this.componentInstance.removeEventListener(Lotus.ComponentEvent.READY, this, 'init');\n        }\n    }\n\n    protected setUpBindings():void{\n\n    }\n\n    protected removeBindings():void{\n        this.binder.unbindAll();\n    }\n\n    public toString():string{\n        return this.id;\n    }\n\n    public init():void{\n        this.addEventListeners();\n        this.setUpBindings();\n    }\n\n    public destroy():void{\n        this.removeEventListeners();\n        this.removeBindings();\n        this.id = null;\n        this.componentInstance = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/AbstractMediator.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Lotus\"\n// module id = 2\n// module chunks = 0 1","/**\n * Created by dsmiley on 7/24/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {ICommandMap} from \"./ICommandMap\";\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class CommandMap implements ICommandMap{\n    public eventFunctionMap:Object;\n    public instanceMap:Object;\n    public context:Lotus.IContext;\n\n    constructor(context:Lotus.IContext){\n        //Note: this could be improved by creating read only accessor methods for instanceMap and eventFunctionMap\n        this.eventFunctionMap = {};\n        this.instanceMap = {};\n        this.context = context;\n    }\n\n    public addCommand(eventType:string, handler:any, functionName:string='execute', useSingleton:boolean=false):void{\n        if( this.eventFunctionMap[eventType] === null || this.eventFunctionMap[eventType] === undefined ){\n            this.eventFunctionMap[eventType] = [];\n        }\n\n        if( this.hasCommandMap( eventType, handler, functionName ) ){\n            return;//don't add the handler/function twice\n        }\n\n        this.eventFunctionMap[eventType].push({eventType:eventType, handler:handler, functionName:functionName, useSingleton:useSingleton});\n\n        if( useSingleton ){\n            if( this.instanceMap[eventType] === null ||  this.instanceMap[eventType] === undefined ){\n                this.instanceMap[eventType] = {};\n            }\n            if( this.instanceMap[eventType][handler] === null ||  this.instanceMap[eventType][handler] === undefined ){\n                this.instanceMap[eventType][handler] = new handler(this.context);\n            }\n        }\n        if( !this.context.eventDispatcher.canListen(eventType, this, 'routeEventToCommand') ){\n            this.context.eventDispatcher.addEventListener(eventType, this, 'routeEventToCommand');\n        }\n    }\n\n    public hasCommandMap(eventType:string, handler:Object, functionName:string):boolean{\n        let hasCommand = false;\n        if( this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined ){\n            let mapArray = this.eventFunctionMap[eventType];\n            for( let itemIndex = 0; itemIndex < mapArray.length; itemIndex++){\n                let item = mapArray[ itemIndex ];\n                if( item.handler == handler && item.functionName == functionName ){\n                    hasCommand = true;\n                    break;\n                }\n            }\n        }\n        return hasCommand;\n    }\n\n    public removeCommand(eventType:string, handler:Object):void{\n        if( this.eventFunctionMap[eventType] !== null && this.eventFunctionMap[eventType] !== undefined ){\n            let mapArray = this.eventFunctionMap[eventType];\n            for( let itemIndex = mapArray.length - 1; itemIndex >= 0; itemIndex--){\n                let item = mapArray[ itemIndex ];\n                if( item.handler == handler ){\n                    //remove the item form the array\n                    switch (itemIndex) {\n                        case 0:\n                            mapArray.shift();\n                            break;\n                        case mapArray.length - 1:\n                            mapArray.pop();\n                            break;\n                        default:\n                            let head = mapArray.slice(0, itemIndex);\n                            let tail = mapArray.slice(itemIndex + 1);\n                            mapArray = head.concat(tail);\n                            break;\n                    }\n                }\n            }\n            if( this.eventFunctionMap[eventType].length <= 0 ){\n                this.context.eventDispatcher.removeEventListener(eventType, this, 'routeEventToCommand');\n                delete this.eventFunctionMap[eventType];\n            }\n        }\n    }\n\n    public removeAllCommands():void{\n        this.eventFunctionMap = {};\n        this.instanceMap = {};\n        this.context.eventDispatcher.removeAllEventListeners(this);\n    }\n\n    public routeEventToCommand(event:Lavender.IEvent):void{\n        if( this.eventFunctionMap[event.type] !== null && this.eventFunctionMap[event.type] !== undefined ){\n            let mapArray = this.eventFunctionMap[event.type];\n            for( let itemIndex = 0; itemIndex < mapArray.length; itemIndex++){\n                let item = mapArray[ itemIndex ];\n                if( item.useSingleton ){\n                    this.instanceMap[item.event.type][item.handler][item.functionName]();\n                }else{\n                    let instance;\n                    if( typeof item.handler === 'object' ){\n                        instance = item.handler;\n                    }else{\n                        //IMPORTANT: only constructor function will get the context! This is by design as it's assumed preconstructed objects have all required dependencies\n                        instance = new item.handler(this.context);\n                    }\n                    instance[item.functionName](event);\n                }\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/CommandMap.ts","/**\n * Created by dsmiley on 9/20/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IContext} from \"./IContext\";\n\nexport class ComponentMap extends Lotus.ComponentMap{\n    constructor(context:IContext){\n        super(context);\n    }\n\n    protected mapMediators(tagInstance:Lotus.LotusHTMLElement):void{\n        (this.context as IContext).mediatorMap.apply(tagInstance.tagName.toLowerCase(), tagInstance.lotusComponentInstance);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/ComponentMap.ts","/**\n * Created by dsmiley on 7/24/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IInjector} from './IInjector';\n\nexport class Injector implements IInjector{\n    public context:Lotus.IContext;\n    public objectMap:Object;\n    public typeMap:Array<Object> = [];\n\n    constructor(context:Lotus.IContext){\n        this.context = context;\n        this.objectMap = {};\n    }\n\n    public mapObject(key:any, constructor:Function, useSingleton:boolean=false):void{\n        if(typeof key == 'function'){\n            var mapIndex = -1;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.constructor == constructor){\n                    mapIndex = index;\n                    return false;\n                }\n            });\n            //TODO:refactror to overrite index\n            if(mapIndex < 0){\n                this.typeMap.push({constructor:constructor, useSingleton:useSingleton, instance:null, type:key});\n            }\n        }else{\n            //instantiate singleton instance upon request is more efficient\n            this.objectMap[key] = {constructor:constructor, useSingleton:useSingleton, instance:null};\n        }\n    }\n\n    public mapSingletonInstance(key:any, instance:any):void{\n        if(typeof key == 'function'){\n            var mapIndex = -1;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.instance == instance){\n                    mapIndex = index;\n                    return false;\n                }\n            });\n            //TODO:refactror to overrite index\n            if(mapIndex < 0){\n                this.typeMap.push({constructor: null, useSingleton: true, instance: instance});\n            }\n        }else {\n            //map injector as sigleton using the supplied instance\n            //this method is very useful for mapping objects that are themselves singletons and may have already been constructed\n            //prime example is the model wich generally is constructed before injections are defined\n            this.objectMap[key] = {constructor: null, useSingleton: true, instance: instance};\n        }\n    }\n\n    public inject(key:any):Object{\n        if(typeof key == 'function'){\n            var map:Object;\n            this.typeMap.forEach(function(value:any, index:number){\n                if(value.type == key || value.instance instanceof key){\n                    map = value;\n                    return false;\n                }\n            });\n            if(map){\n                if( map['useSingleton'] ){\n                    if( map['instance'] === null ){\n                        map['instance'] = new (map.constructor as FunctionConstructor)();\n                    }\n                    return map['instance'];\n                }else{\n                    return new (map.constructor as FunctionConstructor)();\n                }\n            }\n        }else{\n            if( this.objectMap[key] !== null && this.objectMap[key] !== undefined ){\n                if( this.objectMap[key].useSingleton ){\n                    if( this.objectMap[key].instance === null ){\n                        this.objectMap[key].instance = new this.objectMap[key].constructor();\n                    }\n                    return this.objectMap[key].instance;\n                }else{\n                    return new this.objectMap[key].constructor();\n                }\n            }\n        }\n        throw new Error('Lotus.Injector.prototype.getObject: could not find object for key: ' + key);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/Injector.ts","import {IMediatorMap} from \"./IMediatorMap\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {IMediator} from \"../mediators/IMediator\";\n\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport class MediatorMap implements IMediatorMap{\n    protected _tagConstructorMap:Object;\n    protected _mediatorInstanceMap:Object;\n    public context:Lotus.IContext;\n\n    constructor(context:Lotus.IContext){\n        //Note: this could be improved by creating read only accessor methods for tagMap and eventFunctionMap\n        this._tagConstructorMap = {};\n        this._mediatorInstanceMap = {};\n        this.context = context;\n    }\n    \n    get tagConstructorMap():Object{\n        return this._tagConstructorMap;\n    }\n\n    get mediatorInstanceMap():Object{\n        return this._mediatorInstanceMap;\n    }\n\n    public add(tagName:string, mediatorConstructor:Function, useSingleton:boolean=false){\n        if( this.hasMediatorMap( tagName, mediatorConstructor ) ){\n            return;//don't add the mediatorConstructor/function twice\n        }\n        this.tagConstructorMap[tagName] = {useSingleton:useSingleton, constructor:mediatorConstructor, id:Lavender.UuidUtils.generateUUID(), name:mediatorConstructor.toString()};\n    }\n\n    public remove(tagName:string, mediatorConstructor:Function):string{\n        if( !this.hasMediatorMap( tagName, mediatorConstructor ) ){\n            return;//don't add the mediatorConstructor/function twice\n        }\n\n        let mapId = this.tagConstructorMap[tagName].id;\n\n        this.tagConstructorMap[tagName] = null;\n        delete this.tagConstructorMap[tagName];\n\n        if(this._mediatorInstanceMap[mapId] === null ||  this._mediatorInstanceMap[mapId] === undefined){\n            return;//mo mediators were applied to this mapping\n        }\n        //iterate in reverse over all instance and destroy\n        for( let i=0; i < (this._mediatorInstanceMap[mapId] as Array<IMediator>).length ; i++){\n            this._mediatorInstanceMap[mapId][i].destroy();\n        }\n        //make the array eligible for garbage collection\n        this._mediatorInstanceMap[mapId] = null;\n        delete this._mediatorInstanceMap[mapId];\n\n        return mapId;//return mapId to help enable better tests\n    }\n\n    public apply(tagName:string, componentInstance:Lotus.IComponent):void{\n        let map = this.tagConstructorMap[tagName];\n\n        if(!map){\n            return;//no mediator found for this tag\n        }\n\n        if(this._mediatorInstanceMap[map.id] === null ||  this._mediatorInstanceMap[map.id] === undefined){\n            this._mediatorInstanceMap[map.id] = [];\n        }\n\n        if( map.useSingleton ){\n            if( (this._mediatorInstanceMap[map.id] as Array<IMediator>).length == 0 ){\n                (this._mediatorInstanceMap[map.id] as Array<IMediator>).push( new map.constructor(componentInstance, this.context) );\n            }\n        }else{\n            (this._mediatorInstanceMap[map.id] as Array<IMediator>).push( new map.constructor(componentInstance, this.context) );\n        }\n    }\n\n    public hasMediatorMap(tagName:string, mediatorConstructor:Function):boolean{\n        return (this.tagConstructorMap.hasOwnProperty(tagName) && this.tagConstructorMap[tagName].name == mediatorConstructor.toString())\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/MediatorMap.ts","import {ICommand} from \"./ICommand\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {ActionSuccessEvent} from '../events/ActionSuccessEvent';\nimport {ActionErrorEvent} from '../events/ActionErrorEvent';\nimport {IService} from \"../service/IService\";\nimport {IContext} from \"../../context/IContext\";\n/**\n * Created by dsmiley on 7/28/17.\n */\nexport abstract class AbstractCommand extends Lavender.EventDispatcher implements ICommand{\n    protected service:IService;\n    protected opModel:Lavender.AsyncOperationModel;\n    protected parser:Lavender.IParser;\n    protected errorModel:Lavender.ErrorModel;\n    public context:IContext;\n\n\n    constructor(context:IContext){\n        super();\n        this.context = context;\n        this.service = context.injector.inject('service') as IService;\n        this.parser = context.injector.inject('parser') as Lavender.IParser;\n        this.opModel = context.injector.inject('opModel') as Lavender.AsyncOperationModel;\n        this.errorModel = context.injector.inject('errorModel') as Lavender.ErrorModel;\n    }\n    \n    public execute(event:Lavender.IEvent):string{\n        if (this.service === null || this.service === undefined || this.opModel === null || this.opModel === undefined || this.parser === null || this.parser === undefined) {\n            this.executionError();\n        }\n        this.opModel.asyncOperationComplete = false;\n        this.opModel.asyncOperationCount += 1;\n        return this.executeServiceMethod();\n    }\n\n    //method must return a requestID\n    //Override this method in subclasses\n    protected executeServiceMethod():string{\n        return null;\n    }\n\n    //Override this method in subclasses\n    //it should parse the result and return the resulting Object tree\n    protected parseResponse(result:Lavender.IResult):Object{\n        return null;\n    }\n\n    protected dispatchSuccess(parsedResult:Object):void{\n        let doneEvent = new ActionSuccessEvent(ActionSuccessEvent.SUCCESS,{result:parsedResult});\n        this.dispatch(doneEvent);\n    }\n\n    public success(result:Lavender.IResult):void{\n        try {\n            //result is instance of Lavender.HttpSuccess\n            let parsedResult = this.parseResponse(result);\n            this.dispatchSuccess(parsedResult);\n        } catch (e) {\n            let errorMessage = this.getErrorMessage() + \"\\n\" + e.message + \"\\n\" + e.stack;\n            let errorEvent = new ActionErrorEvent(ActionErrorEvent.ERROR, {message:errorMessage});\n            this.dispatch(errorEvent);\n            let error = {name: 'error', message: errorMessage};\n            this.errorModel.errors.addItem(error);\n            this.errorModel.appError = true;\n        } finally {\n            this.opModel.asyncOperationCount -= 1;\n            if (this.opModel.asyncOperationCount == 0) {\n                this.opModel.asyncOperationComplete = true;\n            }\n            this.destroy();\n        }\n    }\n\n    public fault(fault:Lavender.IFault):void{\n        //fault is an instance of Lavender.HttpFault\n        this.opModel.asyncOperationCount -= 1;\n        if (this.opModel.asyncOperationCount == 0) {\n            this.opModel.asyncOperationComplete = true;\n        }\n        let errorMessage = this.getFaultString() + fault.message;\n        let errorEvent = new ActionErrorEvent(ActionErrorEvent.ERROR, {message:errorMessage});\n        this.dispatch(errorEvent);\n        let error = {name: fault.status, message: errorMessage};\n        this.errorModel.errors.addItem(error);\n        this.errorModel.appError = true;\n        this.destroy();\n    }\n\n    //Override this method in subclasses\n    public onProgress(progress:number):void{\n\n    }\n\n    //Override this method in subclasses\n    protected getFaultString():string{\n        return null;\n    }\n\n    //Override this method in subclasses\n    protected getErrorMessage():string{\n        return null;\n    }\n\n    protected executionError():void{\n        // These properties weren't injected or supplied in the constructor or manually.\n        // They are needed so we throw an error.\n        let msg = this.getExecErrorString();\n        if (this.service === null || this.service === undefined) {\n            msg += \" service\";\n        }\n        if (this.opModel === null || this.opModel) {\n            msg += \", opModel\";\n        }\n        if (this.parser === null || this.parser === undefined) {\n            msg += \", parser\";\n        }\n\n        msg += \".\";\n\n        throw new Error(msg);\n    }\n\n    //Override this method in subclasses\n    protected getExecErrorString():string{\n        return 'Lavender.AbstractServiceAction.prototype.executionError: the following are required: ';\n    }\n\n    public destroy():void{\n        if( this.canListen(ActionErrorEvent.ERROR, this, 'onError') ){\n            this.removeEventListener(ActionErrorEvent.ERROR, this, 'onError');\n        }\n        if( this.canListen(ActionSuccessEvent.SUCCESS, this, 'onSuccess') ){\n            this.removeEventListener(ActionSuccessEvent.SUCCESS, this, 'onSuccess');\n        }\n        this.context = null;\n        this.opModel = null;\n        this.service = null;\n        this.parser = null;\n        this.errorModel = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/command/AbstractCommand.ts","/**\n * Created by dsmiley on 5/18/17.\n */\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class ActionErrorEvent extends Lavender.AbstractEvent{\n    constructor(type:string, payload?:Object){\n        super(type, payload);\n\n        if( !payload || (payload as any).message === null || (payload as any).message === undefined ){\n            throw new Error('Lavender.ActionErrorEvent: payload.message is required');\n        }\n    }\n\n    public static ERROR:string = 'actionError';\n\n    clone(type:string, payload:Object):Lavender.IEvent{\n        return new ActionErrorEvent(this.type, this.payload)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/events/ActionErrorEvent.ts","/**\n * Created by dsmiley on 5/18/17.\n */\nimport * as Lavender from 'lavenderjs/lib';\n\nexport class ActionSuccessEvent extends Lavender.AbstractEvent{\n    constructor(type:string, payload?:Object){\n        super(type, payload);\n\n        if( payload === null || payload === undefined ){\n            throw new Error('Lavender.ActionSuccessEvent: payload is required');\n        }\n    }\n\n    public static SUCCESS:string = 'actionSuccess';\n\n    clone(type:string, payload:Object):Lavender.IEvent{\n        return new ActionSuccessEvent(this.type, this.payload)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/control/events/ActionSuccessEvent.ts","import {IService} from \"./IService\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {HttpServiceFactory} from '../../factory/HttpServiceFactory'\n/**\n * Created by dsmiley on 7/27/17.\n * This is a sample asynchronous action used in unit tests. It can be used as a template though for all asynch actions\n */\nexport class SampleService extends Lavender.AbstractHttpService implements IService{\n    public config:Lavender.Config;\n    public serviceMap:Object;\n\n    constructor(config:Lavender.Config){\n        super();\n        this.config = config;\n        this.serviceMap = (config.hasOwnProperty('serviceMap')) ? config['serviceMap'] :\n        {\n            'echoJSON'\t\t\t\t    : ':3000/echoJSON/key/{0}',\n            'localRequest'\t\t\t\t: ':3000/printondemand/1234/photos/{0}'\n        };\n    }\n    \n    protected getURLWithParams(key:string, args:Array<string>):string{\n        return (args !== null && args !== undefined ) ? Lavender.StringUtil.substitute(this.getURL(key), args) : this.getURL(key);\n    }\n\n    protected getURL(key:string):string{\n        return this.config.baseUrl + this.serviceMap[key];\n    }\n\n    public echoJSON(jsonKey:string, key:string, responder:Lavender.IResponder, paramObj:Object={}, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        //this is a sample service method to be used as an example only. You service methods will be dependent on your service API and model objects\n        //note the use of the key param. This is a very importnat feature and I highly recommend that whatever service you created implements a similar method\n        //don't hard code or otherwise tightly couple the URL creation inside this method. The use of a builder pattern ensures the end point can be changed based on environment\n        var url = this.getURLWithParams(key, [jsonKey]);\n        return this.sendRequest(true, responder, url, paramObj, format, contentType, cache);\n    }\n\n    public testRequestUsingIncludedAPI(key:string, responder:Lavender.IResponder, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        var url = this.getURLWithParams(key, ['54232fc2-7345-4921-8079']);//hard coded args\n        return this.sendRequest(false, responder, url, null, format, contentType, cache);\n    }\n\n    public sendRequest(isPostRequest:boolean, responder:Lavender.IResponder, url:string, paramObj:Object={}, format:string='json', contentType:string='application/json', cache:boolean=false):string{\n        var params = JSON.stringify(paramObj);\n\n        if( cache === null || cache === undefined ){\n            cache = false;\n        }\n\n        var httpRequestInstance:Lavender.IHttpService = HttpServiceFactory.getInstance().getHttpService(this.config.serviceCode);\n        httpRequestInstance.addResponder(responder);\n        var requestType = (isPostRequest) ? 'POST' : 'GET';\n        return httpRequestInstance.send(requestType, url, params, contentType, format, cache);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/service/SampleService.ts","import {IEventDispatcherFactory} from \"./IEventDispatcherFactory\";\nimport * as Lavender from 'lavenderjs/lib';\n\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class EventDispatcherFactory implements IEventDispatcherFactory{\n    private static INSTANCE:IEventDispatcherFactory = null;\n\n    constructor(){\n        if (EventDispatcherFactory.INSTANCE != null ) {\n            throw( 'EventDispatcherFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IEventDispatcherFactory{\n        if (EventDispatcherFactory.INSTANCE == null) {\n            EventDispatcherFactory.INSTANCE = new EventDispatcherFactory();\n        }\n        return EventDispatcherFactory.INSTANCE;\n    }\n\n    public getEventDispatcher(eventDispatcherCode:string='Lavender.EventDispatcher'):Lavender.IEventDispatcher{\n        let dispatcher;\n        //config.daoCode defaults to jquery\n        switch( eventDispatcherCode ){\n            case \"Lavender.EventDispatcher\":\n            default:\n                dispatcher = new Lavender.EventDispatcher();\n        }\n        return dispatcher;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/EventDispatcherFactory.ts","import {IHttpServiceFactory} from \"./IHttpServiceFactory\";\nimport * as Lavender from 'lavenderjs/lib';\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class HttpServiceFactory implements IHttpServiceFactory{\n    private static INSTANCE:IHttpServiceFactory = null;\n\n    constructor(){\n        if (HttpServiceFactory.INSTANCE != null ) {\n            throw( 'HttpServiceFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IHttpServiceFactory{\n        if (HttpServiceFactory.INSTANCE == null) {\n            HttpServiceFactory.INSTANCE = new HttpServiceFactory();\n        }\n        return HttpServiceFactory.INSTANCE;\n    }\n\n    //override this method to return custon IService implementations\n    public getHttpService(code:string='Lavender.XhrHttpService'):Lavender.IHttpService{\n        let httpService;\n        switch(code){\n            case \"Lavender.XhrHttpService\":\n            default:\n                httpService = new Lavender.XhrHttpService();\n                break;\n        }\n        return httpService;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/HttpServiceFactory.ts","/**\n * Created by dsmiley on 9/20/17.\n */\nimport * as Lotus from \"lotusjs-components/lib\";\nimport {IMediatorMap} from \"./IMediatorMap\";\nimport {IInjector} from \"./IInjector\";\nimport {ICommandMap} from \"./ICommandMap\";\nimport {CommandMap} from \"./CommandMap\";\nimport {Injector} from \"./Injector\";\nimport {MediatorMap} from \"./MediatorMap\";\nimport {EventDispatcherFactory} from \"../factory/EventDispatcherFactory\";\nimport {ComponentMap} from \"./ComponentMap\";\n\nexport class Context extends Lotus.Context{\n    public commandMap:ICommandMap;\n    public injector:IInjector\n    public mediatorMap:IMediatorMap;\n\n    constructor(config:Object, params:Object){\n        super(config, params);\n    }\n\n    public startUp(){\n        //override the component map instance to use our version\n        this.componentMap = new ComponentMap(this);\n        super.startUp();\n        //IMPORTANT: must occur first so application event bus is configured\n        this.eventDispatcher = EventDispatcherFactory.getInstance().getEventDispatcher();\n        this.commandMap = new CommandMap(this);//create factory if we require sub classes one day\n        this.injector = new Injector(this);//create factory if we require sub classes one day\n        this.mediatorMap = new MediatorMap(this);\n        this.mapCommands();\n        this.mapObjects();\n        this.mapMediators();\n        this.mapTags();\n    }\n\n    public mapTags(){\n\n    }\n\n    public mapCommands(){\n\n    }\n\n    public mapObjects(){\n\n    }\n\n    public mapMediators(){\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/context/Context.ts","import {AbstractCommand} from \"./AbstractCommand\";\nimport * as Lotus from \"lotusjs-components/lib\";\nimport * as Lavender from 'lavenderjs/lib';\nimport {ISampleService} from \"../service/ISampleService\";\nimport {IContext} from \"../../context/IContext\";\n\n/**\n * Created by dsmiley on 7/28/17.\n */\nexport class SampleCommand extends AbstractCommand{\n\n    protected model:Object;//you should implement a concrete model implementation in your projects\n\n    constructor(context:IContext){\n        super(context);\n    }\n\n    protected executeServiceMethod():string{\n        //since services will always be injected by the IOC container always user the interface type\n        return (this.service as ISampleService).testRequestUsingIncludedAPI('localRequest', this);\n    }\n\n    protected parseResponse(result:Lavender.IResult):Object{\n        //since serilization objects will always be injected by the IOC container always user the interface type\n        return this.parser.parse(result);//use this.parser.parse to deserialize results. You'll of course need to implement the parser, our tests just use a generic function that returns the result\n        //most commands would also receive a model injection and the command would update it here\n    }\n\n    protected getFaultString():string{\n        return 'Lotus.SampleCommand a service request error occured';\n    }\n\n    protected getErrorMessage():string{\n        return 'Lotus.SampleCommand an execution error occured ';\n    }\n\n    protected getExecErrorString():string{\n        return 'Lotus.SampleCommand the following are required: ';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/control/command/SampleCommand.ts","import {ISerializeFactory} from \"./ISerializeFactory\";\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class SerializeFactory implements ISerializeFactory{\n    private static INSTANCE:ISerializeFactory = null;\n\n    constructor(){\n        if (SerializeFactory.INSTANCE != null ) {\n            throw( 'SerializeFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():ISerializeFactory{\n        if (SerializeFactory.INSTANCE == null) {\n            SerializeFactory.INSTANCE = new SerializeFactory();\n        }\n        return SerializeFactory.INSTANCE;\n    }\n\n    /*\n     * Stub for override, this method is just an example of how this factory can be used\n     * */\n    public getServiceResultParser(parserCode:string):Object{\n        let parser;\n        switch( parserCode ){\n            case 'local':\n            case 'remote':\n            default:\n                parser = {};\n                break;\n        }\n        return parser;\n    }\n\n    /*\n     * Stub for override, this method is just an example of how this factory can be used\n     * */\n    public getServiceExporter(exporterCode:string):Object{\n        let exporter;\n        //we resuse parserCode which should really probably be called serializationCode\n        switch( exporterCode ){\n            case 'local':\n            case 'remote':\n            default:\n                exporter = {};\n                break;\n        }\n        return exporter;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/SerializeFactory.ts","import {IService} from \"../control/service/IService\";\nimport {IServiceFactory} from \"./IServiceFactory\";\nimport {SampleService} from \"../control/service/SampleService\";\nimport * as Lavender from 'lavenderjs/lib';\n/**\n * Created by dsmiley on 7/27/17.\n */\nexport class ServiceFactory implements IServiceFactory{\n    private static INSTANCE:IServiceFactory = null;\n\n    constructor(){\n        if (ServiceFactory.INSTANCE != null ) {\n            throw( 'ServiceFactory.INSTANCE: Singleton class has already been instantiated' );\n        } else {\n            //perform any required object set up\n        }\n    }\n\n    public static getInstance():IServiceFactory{\n        if (ServiceFactory.INSTANCE == null) {\n            ServiceFactory.INSTANCE = new ServiceFactory();\n        }\n        return ServiceFactory.INSTANCE;\n    }\n\n    public getService(config:Lavender.Config):IService{\n        var service;\n        switch( config.serviceCode ){\n            default:\n                service = new SampleService( config );\n        }\n        return service;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/factory/ServiceFactory.ts","import {AbstractMediator} from \"./AbstractMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\n/**\n * Created by dsmiley on 7/26/17.\n */\n\nexport class ButtonMediator extends AbstractMediator{\n\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        console.log('ButtonMediator constructor called')\n        super(componentInstance,context);\n    }\n\n    protected onClick(event:Event):void{\n        console.log('Im the button mediator, I can handle the component click and dispatch an application event.');\n    }\n\n    protected addEventListeners():void{\n        super.addEventListeners();\n        this.componentInstance.addEventListener('click', this, 'onClick');\n    }\n\n    protected removeEventListeners():void{\n        super.removeEventListeners();\n        this.componentInstance.removeEventListener('click', this, 'onClick');\n    }\n\n    public toString():string{\n        return 'Lotus.ButtonMediator';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/ButtonMediator.ts","import {AbstractMediator} from \"./AbstractMediator\";\nimport * as Lotus from \"lotusjs-components/lib\";\n/**\n * Created by dsmiley on 7/26/17.\n */\nexport class ListMediator extends AbstractMediator{\n    constructor(componentInstance:Lotus.IComponent, context:Lotus.IContext){\n        super(componentInstance,context);\n    }\n\n    public toString():string{\n        return 'Lotus.ListMediator';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mediators/ListMediator.ts","/**\n * Created by dsmiley on 8/30/17.\n */\nimport 'reflect-metadata';\nimport * as Lavender from 'lavenderjs/lib';\n\nexport type injectionResolver = {property:string, type:Function};\n\nexport function inject(target:any, key:string){\n    //set target[key] equal to a new instance of the mapped constructor of target's type\n    let t = Reflect.getMetadata('design:type', target, key);\n    if (!t) {\n        // Needed to support react native inheritance\n        t = Reflect.getMetadata('design:type', target.constructor, key);\n    }\n    if(!target['resolveInjections']){\n        target['resolveInjections'] = new Array<injectionResolver>();\n    }\n    (target['resolveInjections'] as Array<injectionResolver>).push({property:key, type:t});\n    //console.log('key: ' + key);\n    //console.log('t.name: ' + t.name);\n    //console.log('target.constructor.name: ' + target.constructor.name);\n    //console.log('target.constructor.prototype: ' + target.constructor.prototype);\n}\n\nexport function injectable(target:any){\n    // the new constructor behaviour\n    var f : any = function (...args) {\n        Object.getPrototypeOf(this.constructor.prototype).constructor.apply(this, args);\n        console.log(\"injectable constructor called, attempting to resolve injections: \" + this.constructor.prototype);\n        if(this.resolveInjections){\n            console.log(\"injections found!!!!: \");\n            //TODO: move this method to a decorator that sets up this.resolveInjections as an accessor and adds this functionality to the constructor\n            this.resolveInjections.forEach(function(value:injectionResolver, index:number){\n                var instance:any = this.context.injector.inject(value.type);\n                if(instance){\n                    this[value.property] = instance;\n                }\n            }.bind(this));\n        }\n        return this;\n    }\n\n    // copy prototype so intanceof operator still works\n    f.prototype = target.prototype;\n\n    return f;\n}\n\nexport function bindable(target: any, key: string){\n    console.log('bindable decorator called');\n    // property value\n    var _val = target[key];\n\n    if(!target['notify']){\n        console.log('notify is undefined. please extend Lavender.Subject.');\n        return;\n    }\n\n    // property getter\n    var getter = function () {\n        console.log('Get: ${key} => ${returnValue}');\n        return this['_'+key];\n    };\n\n    // property setter\n    var setter = function (newVal) {\n        console.log('Set: ${key} => ${newVal}');\n        this['_'+key] = newVal;\n        this['notify']( newVal, key );\n    };\n\n    // Delete property.\n    if (delete target[key]) {\n        //define the private property:\n        target['_'+key] = _val;\n        // Create new property with getter and setter\n        Object.defineProperty(target, key, {\n            get: getter,\n            set: setter,\n            enumerable: true,\n            configurable: true\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/reflection/InjectorDecorator.ts","/**\n * Created by dsmiley on 7/24/17.\n */\nexport * from './context/IInjector';\nexport * from './context/Injector';\nexport * from './context/CommandMap';\nexport * from './context/IMediatorMap';\nexport * from './context/MediatorMap';\nexport * from './context/ComponentMap';\nexport * from './context/Context';\nexport * from './reflection/InjectorDecorator';\nexport * from './factory/IEventDispatcherFactory';\nexport * from './factory/EventDispatcherFactory';\nexport * from './factory/ISerializeFactory';\nexport * from './factory/SerializeFactory';\nexport * from './factory/IHttpServiceFactory';\nexport * from './factory/HttpServiceFactory';\nexport * from './factory/IServiceFactory';\nexport * from './factory/ServiceFactory';\nexport * from './control/service/IService';\nexport * from './control/service/SampleService';\nexport * from './control/service/ISampleService';\nexport * from './control/events/ActionSuccessEvent';\nexport * from './control/events/ActionErrorEvent';\nexport * from './control/command/AbstractCommand';\nexport * from './control/command/SampleCommand';\nexport * from './mediators/IMediator';\nexport * from './mediators/AbstractMediator';\nexport * from './mediators/ButtonMediator';\nexport * from './mediators/ListMediator';\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 21\n// module chunks = 0 1","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        HashMap.create = supportsCreate\r\n            ? function () { return MakeDictionary(Object.create(null)); }\r\n            : supportsProto\r\n                ? function () { return MakeDictionary({ __proto__: null }); }\r\n                : function () { return MakeDictionary({}); };\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, propertyKey, attributes) {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                throw new TypeError();\r\n            if (IsNull(attributes))\r\n                attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var keys = [];\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        var k = 0;\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            var nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument) {\r\n        switch (Type(argument)) {\r\n            case 3 /* String */: return true;\r\n            case 4 /* Symbol */: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = HashMap.create();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reflect-metadata/Reflect.js\n// module id = 22\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 23\n// module chunks = 0 1"],"sourceRoot":""}